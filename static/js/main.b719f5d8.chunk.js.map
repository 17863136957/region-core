{"version":3,"sources":["components/Card.tsx","components/Divider.tsx","components/Lines.tsx","App/history.ts","GetStarted/index.tsx","UseValue/index.tsx","UseLoading/api.ts","UseLoading/index.tsx","UseError/api.ts","UseError/index.tsx","UseProps/api.ts","UseProps/index.tsx","SharedValue/api.ts","SharedValue/load.ts","SharedValue/Display1.tsx","SharedValue/Display2.tsx","SharedValue/index.tsx","ClassComponent/index.tsx","AdvancedLoading/index.tsx","RESTful/mockList.ts","RESTful/index.tsx","SWR/mock.ts","SWR/index.tsx","Form/index.tsx","AsyncValidate/api.ts","AsyncValidate/index.tsx","LocalStorageRegion/index.tsx","App/routes.ts","App/codeRegion.tsx","App/Editor.tsx","App/External.tsx","App/AppLayout.tsx","App/index.tsx","index.ts","App/External.module.css"],"names":["Card","children","rest","style","margin","Divider","height","Lines","lines","map","f","index","key","history","createBrowserHistory","IconFont","createFromIconfontCN","scriptUrl","GetStarted","padding","fontSize","href","GithubOutlined","type","region","createRegion","handleChange","e","set","target","value","Component","useValue","width","onChange","count","apiGetUser","Promise","resolve","setTimeout","loadUser","load","loading","useLoading","onClick","reject","error","Error","useError","fetchTime","useFetchTime","title","bordered","Item","label","message","Date","toString","useProps","fetchFactory","delay","fetchUser","fetchFollower","deleteFollower","userRegion","followerRegion","loadBy","loadFollower","state","result","push","slice","clearFollower","useUser","useFollower","userLoading","followerLoading","extra","Display","user","follower","ComponentIn","display","Display1","Display2","ClassComponent","this","props","withValue","leftPartRegion","rightPartRegion","fetch","handleLeft","handleRight","LeftPart","RightPart","SomethingIsLoading","loadingLeft","loadingRight","disabled","Parent","useEffect","spinning","list","0","id","1","factory","func","item","getList","postList","putList","patchList","Object","assign","deleteList","listRegion","handleGet","handlePost","handlePutBy","handlePatchBy","handleDeleteBy","countA","fetchA","countB","fetchB","createMappedRegion","loadA","loadB","combinedRegion","a","b","c","d","setKeyValue","handleInput","handleRadio","handleCheckBox","FormCard","checked","Group","options","Result","String","join","Panel","fetchValidate","Number","asyncValidateRegion","AsyncValidate","validateStatus","getValidateStatus","errorMessage","hasFeedback","help","placeholder","localStorageRegion","createLocalStorageRegion","groupName","UseValue","UseLoading","UseError","UseProps","SharedValue","AdvancedLoading","formattedList","entity","array","keys","forEach","deNormalize","rel","dataSource","header","footer","renderItem","nextItem","flex","useState","current","setCurrent","handleClickA","useCallback","handleClickB","Form","codeRegion","getWindowSize","window","innerWidth","innerHeight","outerWidth","outerHeight","Editor","selectedKey","size","setSize","updateWindowSize","addEventListener","removeEventListener","useWindowSize","code","request","Request","then","res","text","loadCode","language","theme","External","codeLoading","gotoDefinitionClass","styles","dark","className","container","selectedKeyRegion","hash","location","initSelectKey","defaultSelectKey","get","routes","undefined","find","initSelectedKey","replace","MenuItem","menuElements","routeGroups","groupBy","entries","routeList","routeElements","length","SubMenu","getMenuElements","AppLayout","route","Sider","overflowY","mode","defaultOpenKeys","selectedKeys","minHeight","borderRight","Content","app","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b719f5d8.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport { Card as AntdCard } from 'antd';\n\nconst Card: FC<any> = ({ children, ...rest }) => (\n  <AntdCard style={{ margin: 30 }} {...rest}>{children}</AntdCard>\n);\n\nexport default Card;\n","import React from 'react';\n\nconst Divider = () => <div style={{ height: 10 }} />;\n\nexport default Divider;\n","import React, { Fragment, FC } from 'react';\n\nconst Lines: FC<{lines: string[]}> = ({ lines }) => (\n  <Fragment>\n    {lines && lines.map((f, index) => <p key={index || 0}>{f}</p>)}\n  </Fragment>\n);\n\nexport default Lines;\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","import React from 'react';\nimport { createFromIconfontCN, GithubOutlined } from '@ant-design/icons';\n\nconst IconFont = createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_942570_3ol64gksd4x.js',\n});\n\nconst pre = ''\n  + 'git clone https://github.com/regionjs/region-core.git\\n'\n  + 'cd example\\n'\n  + 'npm i\\n'\n  + 'npm start\\n';\n\nconst GetStarted = () => (\n  <div style={{ padding: 32 }}>\n    <h1>How to run this</h1>\n    <pre>{pre}</pre>\n    <h1>Related</h1>\n    <div style={{ fontSize: 18 }}>\n      <a href=\"https://github.com/regionjs/region-core\"><GithubOutlined /> Github</a>\n      <span style={{ margin: '0 15px' }} />\n      <a href=\"https://www.npmjs.com/package/region-core\"><IconFont type=\"npm\" /> npm</a>\n      <span style={{ margin: '0 15px' }} />\n      <a href=\"https://github.com/regionjs/region-core/blob/master/docs/Document.md\"><IconFont type=\"docs\" /> Docs</a>\n    </div>\n  </div>\n);\n\nexport default GetStarted;\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Input, Card, Divider } from '../components';\n\nconst region = createRegion('initialValue');\n\nconst handleChange = (e: any) => region.set(e.target.value);\n\nconst Component = () => {\n  const value = region.useValue();\n  return (\n    <Card>\n      {value}\n      <Divider/>\n      <Input style={{ width: 300 }} value={value} onChange={handleChange} />\n    </Card>\n  );\n};\n\nexport default Component;\n","let count = 0;\n\nexport const apiGetUser = () => new Promise(resolve => setTimeout(() => {\n  resolve(`user from api: ${count}`);\n  count++;\n}, 1000));\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Button, Card, Divider } from '../components';\nimport { apiGetUser } from './api';\n\nconst region = createRegion();\n\nconst loadUser = () => region.load(apiGetUser);\n\n// application initial\nloadUser();\n\nconst Component = () => {\n  const loading = region.useLoading();\n  const value = region.useValue();\n\n  return (\n    <Card loading={loading}>\n      {value}\n      <Divider/>\n      <Button onClick={loadUser}>loadUser</Button>\n    </Card>\n  );\n};\n\nexport default Component;\n","let count = 0;\n\nexport const apiGetUser = () => new Promise((resolve, reject) => setTimeout(() => {\n  if (count > 3) {\n    const error = new Error(`error: ${count}`);\n    reject(error);\n  } else {\n    resolve(`user from api: ${count}`);\n  }\n  count++;\n}, 1000));\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Descriptions, Button } from 'antd';\nimport { Card, Divider } from '../components';\nimport { apiGetUser } from './api';\n\nconst region = createRegion<string>();\n\n// apiGetUser may reject\nconst loadUser = () => region.load(apiGetUser);\n\nloadUser();\n\nconst Component = () => {\n  const loading = region.useLoading();\n  const value = region.useValue();\n  const error = region.useError();\n  const fetchTime = region.useFetchTime() || 0;\n\n  return (\n    <Card loading={loading}>\n      <Descriptions title=\"User Info\" bordered>\n        <Descriptions.Item label=\"Value\">{value}</Descriptions.Item>\n        <Descriptions.Item label=\"Error\">{error ? error.message : ''}</Descriptions.Item>\n        <Descriptions.Item label=\"FetchTime\">{new Date(fetchTime).toString()}</Descriptions.Item>\n      </Descriptions>\n      <Divider />\n      <Button onClick={loadUser}>loadUser</Button>\n    </Card>\n  );\n};\n\nexport default Component;\n","let count = 0;\n\nexport const apiGetUser = () => new Promise((resolve, reject) => setTimeout(() => {\n  if (count > 3) {\n    const error = new Error(`error: ${count}`);\n    reject(error);\n  } else {\n    resolve(`user from api: ${count}`);\n  }\n  count++;\n}, 1000));\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Button, Card, Divider } from '../components';\nimport { apiGetUser } from './api';\nimport {Descriptions} from \"antd\";\n\nconst region = createRegion();\n\n// apiGetUser may reject\nconst loadUser = () => region.load(apiGetUser);\n\nloadUser();\n\nconst Component = () => {\n  const { loading, error, fetchTime, value } = region.useProps();\n\n  return (\n    <Card loading={loading}>\n      <Descriptions title=\"User Info\" bordered>\n        <Descriptions.Item label=\"Value\">{value}</Descriptions.Item>\n        <Descriptions.Item label=\"Error\">{error ? error.message : ''}</Descriptions.Item>\n        <Descriptions.Item label=\"FetchTime\">{new Date(fetchTime).toString()}</Descriptions.Item>\n      </Descriptions>\n      <Divider/>\n      <Button onClick={loadUser}>loadUser</Button>\n    </Card>\n  );\n};\n\nexport default Component;\n","const fetchFactory = <T>(value: T, delay = 1000) => (): Promise<T> => new Promise((resolve) => {\n  setTimeout(() => { resolve(value); }, delay);\n});\n\nexport const fetchUser = fetchFactory('the user from api', 500);\nexport const fetchFollower = fetchFactory('some followers from api');\nexport const deleteFollower = fetchFactory([]);\n","import { createRegion } from 'region-core';\nimport { fetchUser, fetchFollower, deleteFollower } from './api';\n\nconst userRegion = createRegion<string[]>([]);\nconst followerRegion = createRegion<string[]>([]);\n\nexport const loadUser = userRegion.loadBy(fetchUser);\n\nexport const loadFollower = () => followerRegion.load(\n  fetchFollower,\n  (state = [], result) => {\n    state.push(result);\n    return state.slice();\n  },\n);\n\nexport const clearFollower = () => followerRegion.load(deleteFollower);\n\nexport const useUser = userRegion.useValue;\n\nexport const useFollower = followerRegion.useValue;\n\nexport const useLoading = () => {\n  const userLoading = userRegion.useLoading();\n  const followerLoading = followerRegion.useLoading();\n  return userLoading || followerLoading;\n};\n","import React from 'react';\nimport { Card, Button, Lines } from '../components';\nimport { loadFollower, useLoading, useUser, useFollower } from './load';\n\nconst extra = <Button type=\"link\" onClick={loadFollower}>More</Button>;\n\nconst Display = () => {\n  const loading = useLoading();\n  const user = useUser();\n  const follower = useFollower();\n  return (\n    <Card\n      loading={loading}\n      title={user}\n      extra={extra}\n      style={{ width: 300, margin: 30 }}\n    >\n      <Lines lines={follower} />\n    </Card>\n  );\n};\n\nexport default Display;\n","import React from 'react';\nimport { Space } from 'antd';\nimport { Card, Button, Lines } from '../components';\nimport { loadFollower, clearFollower, useLoading, useUser, useFollower } from './load';\n\nconst Display = () => {\n  const loading = useLoading();\n  const user = useUser();\n  const follower = useFollower();\n  return (\n    <Card\n      title={user}\n      style={{ width: 300, margin: 30 }}\n    >\n      <Lines lines={follower} />\n      <Space>\n        <Button loading={loading} onClick={loadFollower}>More</Button>\n        <Button loading={loading} onClick={clearFollower}>Clear</Button>\n      </Space>\n    </Card>\n  );\n};\n\nexport default Display;\n","import React from 'react';\nimport Display1 from './Display1';\nimport Display2 from './Display2';\nimport { loadFollower, loadUser } from './load';\n\nloadUser();\nloadFollower();\n\nconst Component = () => (\n  <div style={{ display: 'flex' }}>\n    <Display1 />\n    <Display2 />\n  </div>\n);\n\nexport default Component;\n","import React, { Component } from 'react';\nimport { createRegion } from 'region-core';\nimport { Input, Card, Divider } from '../components';\n\nconst region = createRegion('initialValue');\n\nconst handleChange = (e: any) => region.set(e.target.value);\n\nclass ClassComponent extends Component<{value: string}> {\n  render() {\n    const { value } = this.props;\n    return (\n     <Card>\n       {value}\n       <Divider/>\n       <Input value={value} onChange={handleChange} />\n     </Card>\n    );\n  }\n}\n\nconst withValue = (ComponentIn: any) => {\n  const ComponentOut = (props: any) => {\n    const value = region.useValue();\n    return <ComponentIn value={value} {...props}/>;\n  };\n  return ComponentOut;\n};\n\nexport default withValue(ClassComponent);\n","import React, {useEffect} from 'react';\nimport { createRegion } from 'region-core';\nimport { Button, Spin, Card, Divider } from '../components';\n\nconst leftPartRegion = createRegion<null>();\nconst rightPartRegion = createRegion<null>();\n\nconst fetch = (): Promise<null> => new Promise(resolve => setTimeout(() => resolve(null), 1000));\n\nconst handleLeft = () => leftPartRegion.load(fetch);\n\nconst handleRight = () => rightPartRegion.load(fetch);\n\nconst LeftPart = () => {\n  const loading = leftPartRegion.useLoading();\n  return <Button loading={loading} onClick={handleLeft}>Load Left Part</Button>;\n};\n\nconst RightPart = () => {\n  const loading = rightPartRegion.useLoading();\n  return <Button loading={loading} onClick={handleRight}>Load Right Part</Button>;\n};\n\nconst SomethingIsLoading = () => {\n  const loadingLeft = leftPartRegion.useLoading();\n  const loadingRight = rightPartRegion.useLoading();\n  return <Button loading={loadingLeft || loadingRight} disabled>Something is loading</Button>;\n};\n\nconst Parent = () => {\n  const loadingLeft = leftPartRegion.useLoading();\n  const loadingRight = rightPartRegion.useLoading();\n\n  useEffect(\n    () => {\n      handleLeft();\n      handleRight();\n    },\n    []\n  )\n\n  return (\n    <Card>\n      <Spin spinning={loadingLeft && loadingRight}>\n        <LeftPart />\n        <Divider />\n        <RightPart />\n        <Divider />\n        <SomethingIsLoading />\n      </Spin>\n    </Card>\n  );\n};\nexport default Parent;\n","interface Item {\n  id: number;\n  value: number;\n}\n\ninterface Shape {\n  [key: number]: Item;\n}\n\nconst list: Shape = {\n  0: { id: 0, value: 0 },\n  1: { id: 1, value: 1 },\n};\nlet index = 2;\n\nconst factory = <T, R>(func: (v: T) => R) => (item: T): Promise<R> => new Promise((resolve) => {\n  setTimeout(() => { resolve(func(item)); }, 500);\n});\n\nexport const getList = factory(() => list);\n\nexport const postList = factory(() => {\n  const item = { id: index, value: index };\n  list[index] = item;\n  index += 1;\n  return item;\n});\n\nexport const putList = factory(((item: Item) => {\n  list[item.id] = item;\n  return list[item.id];\n}));\n\nexport const patchList = factory((item: Item) => {\n  list[item.id] = Object.assign(list[item.id], item);\n  return list[item.id];\n});\n\nexport const deleteList = factory((id: number) => {\n  delete list[id];\n  return null;\n});\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Space } from 'antd';\nimport { Button, List, Card } from '../components';\nimport { getList, postList, putList, patchList, deleteList } from './mockList';\n\ninterface Item {\n  id: number;\n  value: number;\n}\n\ninterface Shape {\n  [key: number]: Item;\n}\nconst listRegion = createRegion<Shape>();\nlistRegion.load(getList);\n\n/* eslint-disable no-param-reassign */\nconst handleGet = listRegion.loadBy(getList);\n\nconst handlePost = listRegion.loadBy(\n  postList,\n  (state = {}, result) => {\n    state[result.id] = result;\n    return state;\n  },\n);\n\nconst handlePutBy = listRegion.loadBy(\n  putList,\n  (state = {}, result) => {\n    state[result.id] = result;\n    return state;\n  },\n);\n\nconst handlePatchBy = listRegion.loadBy(\n  patchList,\n  (state = {}, result) => {\n    state[result.id] = result;\n    return state;\n  },\n);\n\nconst handleDeleteBy = listRegion.loadBy(\n  deleteList,\n  (state = {}, result, id) => {\n    delete state[id];\n    return state;\n  },\n);\n/* eslint-enable no-param-reassign */\n\nconst deNormalize = (entity = {}) => {\n  const array: any[] = [];\n  Object.keys(entity).forEach((key) => {\n    // @ts-ignore\n    const item = entity[key];\n    array.push(item);\n  });\n  return array;\n};\n\nexport default () => {\n  const loading = listRegion.useLoading();\n  const list = listRegion.useValue();\n  const formattedList = deNormalize(list);\n  return (\n    <Card>\n      <a\n        href={'https://en.wikipedia.org/wiki/Representational_state_transfer'}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        What is RESTful?\n      </a>\n      <List\n        loading={loading}\n        dataSource={formattedList}\n        header={<Button onClick={handleGet}>GET</Button>}\n        footer={<Button onClick={handlePost}>POST</Button>}\n        renderItem={\n          (item) => {\n            const nextItem = { id: item.id, value: item.value + 1 };\n            const handlePut = () => handlePutBy(nextItem);\n            const handlePatch = () => handlePatchBy(nextItem);\n            const handleDelete = () => handleDeleteBy(item.id);\n            return (\n              <List.Item>\n                <span style={{ flex: 1 }}>{item.value}</span>\n                <Space>\n                  <Button onClick={handlePut}>PUT</Button>\n                  <Button onClick={handlePatch}>PATCH</Button>\n                  <Button onClick={handleDelete}>DELETE</Button>\n                </Space>\n              </List.Item>\n            );\n          }\n        }\n      />\n    </Card>\n  );\n};\n","const factory = <O>(func: () => O) => (): Promise<O> => new Promise((resolve) => {\n  setTimeout(() => { resolve(func()); }, 500);\n});\n\nlet countA = 0;\nexport const fetchA = factory(() => {\n  countA += 1;\n  return `A${countA}`;\n});\n\nlet countB = 0;\nexport const fetchB = factory(() => {\n  countB += 1;\n  return `B${countB}`;\n});\n","import React, {useCallback, useState} from 'react';\nimport { createMappedRegion } from 'region-core';\nimport { Space } from 'antd';\nimport { Button, Card, Divider } from '../components';\nimport { fetchA, fetchB } from './mock';\n\ntype Key = 'A' | 'B'\n\nconst region = createMappedRegion<Key, unknown>();\nconst loadA = region.loadBy('A', fetchA);\nconst loadB = region.loadBy('B', fetchB);\n\nexport default () => {\n  const [current, setCurrent] = useState<'A' | 'B'>('A');\n  const value = region.useValue(current);\n  const handleClickA = useCallback(\n    () => {\n      setCurrent('A');\n      loadA()\n    },\n    []\n  )\n  const handleClickB = useCallback(\n    () => {\n      setCurrent('B');\n      loadB();\n    },\n    []\n  )\n  return (\n    <Card>\n      <p>\n        {'stale-while-revalidate is a cache invalidation strategy popularized by '}\n        <a\n          href={'https://tools.ietf.org/html/rfc5861'}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          HTTP RFC 5861\n        </a>\n      </p>\n      <Space>\n        <Button onClick={handleClickA}>loadA</Button>\n        <Button onClick={handleClickB}>loadB</Button>\n      </Space>\n      <Divider />\n      {value}\n    </Card>\n  );\n};\n","import React, { Fragment } from 'react';\nimport { createRegion } from 'region-core';\nimport { Input, Switch, Radio, Checkbox, Card, Divider } from '../components';\nimport {Descriptions} from \"antd\";\n\ninterface Shape {\n  a: boolean;\n  b: string;\n  c: string;\n  d: string[];\n}\nconst combinedRegion = createRegion<Shape>({a: false, b: '', c: '', d: []});\n\nconst setKeyValue = (key: any, value: any) => {\n  combinedRegion.set((state) => ({...state, [key]: value}))\n}\n\nconst handleChange = (value: boolean) => setKeyValue('a', value);\nconst handleInput = (e: any) => setKeyValue('b', e.target.value);\nconst handleRadio = (e: any) => setKeyValue('c', e.target.value);\nconst handleCheckBox = (value: any[]) => setKeyValue('d', value);\n\nconst FormCard = () => {\n  const { a, b, c, d } = combinedRegion.useValue();\n  return (\n    <Card>\n      <Switch checked={a} onChange={handleChange} />\n      <Divider />\n      <Input value={b} onChange={handleInput} />\n      <Divider />\n      <Radio.Group value={c} onChange={handleRadio} options={['Hangzhou', 'Shanghai', 'Beijing', 'Chengdu']} />\n      <Divider />\n      <Checkbox.Group options={['Apple', 'Pear', 'Orange']} value={d} onChange={handleCheckBox} />\n    </Card>\n  );\n};\n\nconst Result = () => {\n  const { a, b, c, d } = combinedRegion.useValue();\n  return (\n    <Card>\n      <Descriptions title=\"User Info\" bordered>\n        <Descriptions.Item label=\"A\">{String(a)}</Descriptions.Item>\n        <Descriptions.Item label=\"B\">{b}</Descriptions.Item>\n        <Descriptions.Item label=\"C\">{c}</Descriptions.Item>\n        <Descriptions.Item label=\"D\">{d.join(', ')}</Descriptions.Item>\n      </Descriptions>\n    </Card>\n  );\n};\n\nconst Panel = () => <Fragment><FormCard /><Result /></Fragment>;\n\nexport default Panel;\n","export const fetchValidate = (value: string): Promise<string> => new Promise((resolve, reject) => {\n  setTimeout(\n    () => {\n      if (String(Number(value)) === value) {\n        resolve(value);\n      } else {\n        reject(new Error('message from api: type some number'));\n      }\n    },\n    1000,\n  );\n});\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Form, Input, Card } from '../components';\nimport { fetchValidate } from './api';\n\nconst asyncValidateRegion = createRegion<string>('');\n\nconst loadValidate = (value: string) => {\n  asyncValidateRegion.set(value);\n  asyncValidateRegion.loadBy(fetchValidate)(value);\n};\n\nconst handleChange = (e: any) => loadValidate(e.target.value);\n\nconst getValidateStatus = ({ loading, error, value }: any) => {\n  if (value === '') {\n    return undefined;\n  }\n  if (loading) {\n    return 'validating';\n  }\n  if (error) {\n    return 'error';\n  }\n  return 'success';\n};\n\nconst AsyncValidate = () => {\n  const { loading, error, value } = asyncValidateRegion.useProps();\n  const validateStatus = getValidateStatus({ loading, error, value });\n  const errorMessage = error && error.message;\n  // TODO fix error occurs\n  return (\n    <Card>\n      <Form.Item\n        hasFeedback\n        validateStatus={validateStatus}\n        help={validateStatus === 'validating' ? 'validating...' : errorMessage}\n      >\n        <Input\n          placeholder=\"type some number\"\n          value={value}\n          onChange={handleChange}\n        />\n      </Form.Item>\n    </Card>\n  );\n};\n\nexport default AsyncValidate;\n","import React from 'react';\nimport { createLocalStorageRegion } from 'region-core';\nimport { Input, Card } from '../components';\n\nconst localStorageRegion = createLocalStorageRegion('localStorage-key', 'some value stored in localStorage');\n\nconst handleChange = (e: any) => localStorageRegion.set(e.target.value);\n\nconst LocalStorageRegion = () => {\n  const value = localStorageRegion.useValue();\n  return (\n    <Card>\n      <Input value={value} onChange={handleChange} />\n    </Card>\n  );\n};\n\nexport default LocalStorageRegion;\n","import GetStarted from '../GetStarted';\nimport UseValue from '../UseValue';\nimport UseLoading from '../UseLoading';\nimport UseError from '../UseError';\nimport UseProps from '../UseProps';\nimport SharedValue from '../SharedValue';\nimport ClassComponent from '../ClassComponent';\nimport AdvancedLoading from '../AdvancedLoading';\nimport RESTful from '../RESTful';\nimport SWR from '../SWR';\nimport Form from '../Form';\nimport AsyncValidate from '../AsyncValidate';\nimport LocalStorageRegion from '../LocalStorageRegion';\n\nexport default [{\n  key: 'GetStarted',\n  label: 'Get Started',\n  groupName: 'GetStarted',\n  Component: GetStarted,\n}, {\n  key: 'UseValue',\n  label: 'useValue',\n  groupName: 'Basic',\n  Component: UseValue,\n}, {\n  key: 'UseLoading',\n  label: 'useLoading',\n  groupName: 'Basic',\n  Component: UseLoading,\n}, {\n  key: 'UseError',\n  label: 'useError',\n  groupName: 'Basic',\n  Component: UseError,\n}, {\n  key: 'UseProps',\n  label: 'useProps',\n  groupName: 'Basic',\n  Component: UseProps,\n}, {\n  key: 'LocalStorageRegion',\n  label: 'localStorage',\n  groupName: 'Basic',\n  Component: LocalStorageRegion,\n}, {\n  key: 'SharedValue',\n  label: 'Shared Value',\n  groupName: 'Advanced',\n  Component: SharedValue,\n}, {\n  key: 'AdvancedLoading',\n  label: 'Advanced Loading',\n  groupName: 'Advanced',\n  Component: AdvancedLoading,\n}, {\n  key: 'ClassComponent',\n  label: 'Class Component',\n  groupName: 'Advanced',\n  Component: ClassComponent,\n}, {\n  key: 'RESTful',\n  label: 'RESTful',\n  groupName: 'Advanced',\n  Component: RESTful,\n}, {\n  key: 'SWR',\n  label: 'SWR',\n  groupName: 'Advanced',\n  Component: SWR,\n}, {\n  key: 'AsyncValidate',\n  label: 'Async Validate',\n  groupName: 'Advanced',\n  Component: AsyncValidate,\n}, {\n  key: 'Form',\n  label: 'Form',\n  groupName: 'Advanced',\n  Component: Form,\n}];\n","import { createRegion } from 'region-core';\n\nexport const codeRegion = createRegion<string>('');\n\nexport const loadCode = (selectedKey: any) => {\n  const href = `https://raw.githubusercontent.com/regionjs/region-core/master/example/src/${selectedKey}/index.tsx`;\n  const request = new Request(href);\n  const fetcher = () => fetch(request).then(res => res.text());\n  codeRegion.load(fetcher);\n};\n","import React, { useState, useEffect } from 'react';\nimport MonacoEditor from 'react-monaco-editor';\nimport 'monaco-editor/esm/vs/basic-languages/javascript/javascript.contribution';\nimport { codeRegion, loadCode } from './codeRegion';\n\nconst getWindowSize = () => {\n  if (typeof window === 'undefined') {\n    throw new Error('window undefined');\n  }\n  return {\n    innerWidth: window.innerWidth,\n    innerHeight: window.innerHeight,\n    outerWidth: window.outerWidth,\n    outerHeight: window.outerHeight,\n  };\n};\n\nconst useWindowSize = () => {\n  // 窗口的尺寸事实上和页面内容是无关的，所以没必要等组件布局后再读，初始化的时候直接拿就好\n  const [size, setSize] = useState(getWindowSize);\n  useEffect(\n    () => {\n      const updateWindowSize = () => setSize(getWindowSize());\n      window.addEventListener('resize', updateWindowSize);\n      return () => window.removeEventListener('resize', updateWindowSize);\n    },\n    [],\n  );\n  return size;\n};\n\nconst Editor = ({ selectedKey }: any) => {\n  const { innerWidth } = useWindowSize();\n  const loading = codeRegion.useLoading();\n  const code = codeRegion.useValue();\n  useEffect(\n    () => {\n      loadCode(selectedKey);\n    },\n    [selectedKey],\n  );\n\n  if (loading) {\n    return null;\n  }\n\n  return (\n    <MonacoEditor\n      width={innerWidth - 260}\n      height={500}\n      language=\"javascript\"\n      theme=\"vs-dark\"\n      value={code}\n    />\n  );\n};\nexport default Editor;\n","import React from 'react';\nimport { GithubOutlined } from '@ant-design/icons';\nimport Editor from './Editor';\nimport styles from './External.module.css';\nimport { codeRegion } from './codeRegion';\n\nconst External = ({ selectedKey }: any) => {\n  const codeLoading = codeRegion.useLoading();\n  let gotoDefinitionClass = styles.code;\n  if (!codeLoading) {\n    gotoDefinitionClass = `${styles.code} ${styles.dark}`;\n  }\n  return (\n    <div className={styles.container}>\n      <div className={gotoDefinitionClass}>\n        <a\n          href={`https://github.com/regionjs/region-core/blob/master/example/src/${selectedKey}/index.tsx`}\n          rel=\"noreferrer noopener\"\n          target=\"_blank\"\n        >\n          <GithubOutlined />\n        </a>\n      </div>\n      <Editor selectedKey={selectedKey} />\n    </div>\n  );\n};\n\nexport default External;\n","import React, { FC } from 'react';\nimport { createRegion } from 'region-core';\nimport { get, groupBy } from 'lodash';\nimport { Menu, Layout } from '../components';\nimport history from './history';\nimport routes from './routes';\nimport External from './External';\n\nconst initSelectedKey = () => {\n  const { hash } = history.location;\n  const initSelectKey = hash !== '' ? hash.slice(1) : null;\n  const defaultSelectKey = get(routes, ['0', 'key']);\n  if (!initSelectKey || routes.find(({ key }) => key === initSelectKey) === undefined) {\n    return defaultSelectKey;\n  }\n  return initSelectKey;\n};\n\nconst selectedKeyRegion = createRegion(initSelectedKey());\n\nconst defaultSelectKey = get(routes, ['0', 'key']);\n\nconst onClick = ({ key }: any) => {\n  history.replace(`#${key}`);\n  selectedKeyRegion.set(key);\n};\n\nconst MenuItem = ({ key, label }: any) => <Menu.Item key={key}>{label}</Menu.Item>;\n\nconst getMenuElements = () => {\n  const routeGroups = groupBy(routes, 'groupName');\n\n  return Object.entries(routeGroups).map(([groupName, routeList]) => {\n    const routeElements = routeList.map(MenuItem);\n    if (routeList.length === 1) {\n      return routeElements;\n    }\n    return (\n      <Menu.SubMenu key={groupName} title={groupName} >\n        {routeElements}\n      </Menu.SubMenu>\n    );\n  });\n  // routes.map(MenuItem);\n};\n\nconst menuElements = getMenuElements();\n\nconst AppLayout: FC = () => {\n  const selectedKey = selectedKeyRegion.useValue();\n  const route = routes.find(({ key }) => key === selectedKey);\n  if (!route) {\n    selectedKeyRegion.set(defaultSelectKey);\n    return null;\n  }\n  const { Component, groupName } = route;\n  return (\n    <Layout style={{ height: '100vh' }}>\n      <Layout.Sider width={200} theme=\"light\" style={{ overflowY: 'auto' }}>\n        <Menu\n          mode=\"inline\"\n          defaultOpenKeys={[groupName]}\n          selectedKeys={[selectedKey]}\n          onClick={onClick}\n          style={{ minHeight: '100%', borderRight: '1px solid #e8e8e8' }}\n        >\n          {menuElements}\n        </Menu>\n      </Layout.Sider>\n      <Layout.Content>\n        <Component />\n        {selectedKey !== 'GetStarted' && <External selectedKey={selectedKey} />}\n      </Layout.Content>\n    </Layout>\n  );\n};\n\nexport default AppLayout;\n","import React from 'react';\nimport AppLayout from './AppLayout';\n\nexport const app = <AppLayout />;\n","/* global document */\nimport { render } from 'react-dom';\nimport { app } from './App';\nimport 'antd/dist/antd.css';\nimport './index.css';\n\nrender(app, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"External_container__3t52A\",\"code\":\"External_code__CR0le\",\"dark\":\"External_dark__2BAR1\"};"],"sourceRoot":""}