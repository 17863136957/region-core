{"version":3,"sources":["components/Card.tsx","components/Divider.tsx","components/Lines.tsx","App/history.ts","GetStarted/index.tsx","UseValue/index.tsx","UseLoading/api.ts","UseLoading/index.tsx","UseError/api.ts","UseError/index.tsx","UseProps/api.ts","UseProps/index.tsx","SharedValue/api.ts","SharedValue/load.ts","SharedValue/Display1.tsx","SharedValue/Display2.tsx","SharedValue/index.tsx","ClassComponent/index.tsx","AdvancedLoading/index.tsx","RESTful/mockList.ts","RESTful/index.tsx","SWR/mock.ts","SWR/index.tsx","SelectValue/index.tsx","Form/index.tsx","AsyncValidate/api.ts","AsyncValidate/index.tsx","LocalStorageRegion/index.tsx","CombinedError/api.ts","CombinedError/index.tsx","App/routes.ts","App/codeRegion.tsx","App/Editor.tsx","App/External.tsx","App/AppLayout.tsx","App/index.tsx","index.ts","App/External.module.css"],"names":["Card","_ref","children","rest","Object","objectWithoutProperties","react_default","a","createElement","card","assign","style","width","margin","Divider","height","Lines","lines","react","map","f","index","key","history","createBrowserHistory","IconFont","Icon","createFromIconfontCN","scriptUrl","GetStarted","padding","fontSize","href","es","type","region","createRegion","handleChange","e","set","target","value","Component","useValue","components_Card","components_Divider","onChange","count","loadUser","loadBy","Promise","resolve","setTimeout","concat","loading","useLoading","onClick","reject","error","Error","useError","fetchTime","useFetchTime","message","Date","toString","_region$useProps","useProps","fetchFactory","delay","arguments","length","undefined","fetchUser","fetchFollower","deleteFollower","userRegion","followerRegion","loadFollower","state","result","push","slice","clearFollower","useUser","useFollower","userLoading","followerLoading","extra","Display","user","follower","title","components_Lines","ComponentIn","display","Display1","Display2","ClassComponent","this","props","withValue","leftPartRegion","rightPartRegion","fetch","handleLeft","handleRight","LeftPart","RightPart","SomethingIsLoading","loadingLeft","loadingRight","disabled","Parent","spinning","AdvancedLoading_LeftPart","AdvancedLoading_RightPart","AdvancedLoading_SomethingIsLoading","list","0","id","1","factory","func","item","getList","postList","putList","patchList","deleteList","listRegion","load","handleGet","handlePost","handlePutBy","handlePatchBy","handleDeleteBy","countA","fetchA","countB","fetchB","loadA","loadB","animalRegion","String","generate","typeRegion","handleRadio","Panel","array","memoizedArray","useMemo","filter","getFilteredArray","Group","Button","i","combinedRegion","createCombinedRegion","handleInput","handleCheckBox","FormCard","_combinedRegion$usePr","b","c","d","checked","options","Result","_combinedRegion$usePr2","JSON","stringify","Form_FormCard","Form_Result","fetchValidate","Number","asyncValidateRegion","AsyncValidate","_asyncValidateRegion$","validateStatus","getValidateStatus","errorMessage","Item","hasFeedback","help","placeholder","localStorageRegion","createLocalStorageRegion","LocalStorageRegion","toggleList","fetchValue1","fetchValue2","errorRegion","loadValueWithError","getStatus","routes","label","groupName","UseValue","UseLoading","UseError","UseProps","_errorRegion$useProps","value1","value2","SharedValue","AdvancedLoading","SelectValue","formattedList","entity","keys","forEach","deNormalize","rel","dataSource","header","footer","renderItem","nextItem","flex","Form","codeRegion","getWindowSize","window","innerWidth","innerHeight","outerWidth","outerHeight","Editor","selectedKey","_useState","useState","_useState2","slicedToArray","size","setSize","useEffect","updateWindowSize","addEventListener","removeEventListener","useWindowSize","code","request","Request","then","res","text","loadCode","react_monaco_editor_lib_default","language","theme","External","codeLoading","gotoDefinitionClass","styles","dark","className","container","App_Editor","selectedKeyRegion","hash","location","initSelectKey","defaultSelectKey","get","find","initSelectedKey","_ref2","replace","MenuItem","_ref3","menuElements","routeGroups","groupBy","entries","_ref4","_ref5","routeList","routeElements","SubMenu","getMenuElements","AppLayout","route","_ref6","Sider","overflowY","mode","defaultOpenKeys","selectedKeys","minHeight","borderRight","Content","App_External","app","App_AppLayout","render","document","getElementById","module","exports"],"mappings":"kOAOeA,EAJO,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAaC,EAAhBC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,qBACpBK,EAAAC,EAAAC,cAACC,EAAA,EAADL,OAAAM,OAAA,CAAUC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,KAAUV,GAAOD,ICA3CY,EAFC,kBAAMR,EAAAC,EAAAC,cAAA,OAAKG,MAAO,CAAEI,OAAQ,OCM7BC,EANsB,SAAAf,GAAA,IAAGgB,EAAHhB,EAAGgB,MAAH,OACnCX,EAAAC,EAAAC,cAACU,EAAA,SAAD,KACGD,GAASA,EAAME,IAAI,SAACC,EAAGC,GAAJ,OAAcf,EAAAC,EAAAC,cAAA,KAAGc,IAAKD,GAAS,GAAID,wBCA5CG,EAFCC,cCCVC,EAAWC,IAAKC,qBAAqB,CACzCC,UAAW,iDAwBEC,EAfI,kBACjBvB,EAAAC,EAAAC,cAAA,OAAKG,MAAO,CAAEmB,QAAS,KACrBxB,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,WATQ,yFAURF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,OAAKG,MAAO,CAAEoB,SAAU,KACtBzB,EAAAC,EAAAC,cAAA,KAAGwB,KAAK,2CAA0C1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAMC,KAAK,WAA7D,WACA5B,EAAAC,EAAAC,cAAA,QAAMG,MAAO,CAAEE,OAAQ,YACvBP,EAAAC,EAAAC,cAAA,KAAGwB,KAAK,6CAA4C1B,EAAAC,EAAAC,cAACiB,EAAD,CAAUS,KAAK,QAAnE,QACA5B,EAAAC,EAAAC,cAAA,QAAMG,MAAO,CAAEE,OAAQ,YACvBP,EAAAC,EAAAC,cAAA,KAAGwB,KAAK,wEAAuE1B,EAAAC,EAAAC,cAACiB,EAAD,CAAUS,KAAK,SAA9F,YCnBAC,EAASC,uBAAa,gBAEtBC,EAAe,SAACC,GAAD,OAAYH,EAAOI,IAAID,EAAEE,OAAOC,QAatCC,EAXG,WAChB,IAAMD,EAAQN,EAAOQ,WACrB,OACErC,EAAAC,EAAAC,cAACoC,EAAD,KACGH,EACDnC,EAAAC,EAAAC,cAACqC,EAAD,MACAvC,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAOQ,MAAOA,EAAOK,SAAUT,MCdjCU,EAAQ,ECKNZ,EAASC,yBAETY,EAAWb,EAAOc,ODLE,kBAAM,IAAIC,QAAQ,SAAAC,GAAO,OAAIC,WAAW,WAChED,EAAO,kBAAAE,OAAmBN,IAC1BA,KACC,SCKHC,IAEA,IAaeN,EAbG,WAChB,IAAMY,EAAUnB,EAAOoB,aACjBd,EAAQN,EAAOQ,WAErB,OACErC,EAAAC,EAAAC,cAACoC,EAAD,CAAMU,QAASA,GACZb,EACDnC,EAAAC,EAAAC,cAACqC,EAAD,MACAvC,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAQuB,QAASR,GAAjB,cCpBFD,EAAQ,ECKNZ,EAASC,yBAGTY,EAAWb,EAAOc,ODNE,kBAAM,IAAIC,QAAQ,SAACC,EAASM,GAAV,OAAqBL,WAAW,WAC1E,GAAIL,EAAQ,EAAG,CACb,IAAMW,EAAQ,IAAIC,MAAJ,UAAAN,OAAoBN,IAClCU,EAAOC,QAEPP,EAAO,kBAAAE,OAAmBN,IAE5BA,KACC,SCAHC,IAEA,IAmBeN,EAnBG,WAChB,IAAMY,EAAUnB,EAAOoB,aACjBd,EAAQN,EAAOQ,WACfe,EAAQvB,EAAOyB,WACfC,EAAY1B,EAAO2B,gBAAkB,EAE3C,OACExD,EAAAC,EAAAC,cAACoC,EAAD,CAAMU,QAASA,GACZb,EACDnC,EAAAC,EAAAC,cAACqC,EAAD,MACCa,GAASA,EAAMK,QAChBzD,EAAAC,EAAAC,cAACqC,EAAD,MACC,IAAImB,KAAKH,GAAWI,WACrB3D,EAAAC,EAAAC,cAACqC,EAAD,MACAvC,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAQuB,QAASR,GAAjB,cC1BFD,EAAQ,ECKNZ,EAASC,yBAGTY,EAAWb,EAAOc,ODNE,kBAAM,IAAIC,QAAQ,SAACC,EAASM,GAAV,OAAqBL,WAAW,WAC1E,GAAIL,EAAQ,EAAG,CACb,IAAMW,EAAQ,IAAIC,MAAJ,UAAAN,OAAoBN,IAClCU,EAAOC,QAEPP,EAAO,kBAAAE,OAAmBN,IAE5BA,KACC,SCAHC,IAEA,IAgBeN,EAhBG,WAAM,IAAAwB,EACuB/B,EAAOgC,WAA5Cb,EADcY,EACdZ,QAASI,EADKQ,EACLR,MAAOG,EADFK,EACEL,UAAWpB,EADbyB,EACazB,MAEnC,OACEnC,EAAAC,EAAAC,cAACoC,EAAD,CAAMU,QAASA,GACZb,EACDnC,EAAAC,EAAAC,cAACqC,EAAD,MACCa,GAASA,EAAMK,QAChBzD,EAAAC,EAAAC,cAACqC,EAAD,MACC,IAAImB,KAAKH,GAAWI,WACrB3D,EAAAC,EAAAC,cAACqC,EAAD,MACAvC,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAQuB,QAASR,GAAjB,cCvBAoB,EAAe,SAAI3B,GAAJ,IAAc4B,EAAdC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAsB,IAAtB,OAA+B,kBAAkB,IAAIpB,QAAQ,SAACC,GACjFC,WAAW,WAAQD,EAAQV,IAAW4B,OAG3BI,EAAYL,EAAa,oBAAqB,KAC9CM,EAAgBN,EAAa,2BAC7BO,EAAiBP,EAAa,ICHrCQ,EAAaxC,yBACbyC,EAAiBzC,yBAEVY,EAAW4B,EAAW3B,OAAOwB,GAE7BK,EAAeD,EAAe5B,OACzCyB,EACA,WAAwB,IAAvBK,EAAuBT,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIU,EAAWV,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEtB,OADAO,EAAME,KAAKD,GACJD,EAAMG,UAIJC,EAAgBN,EAAe5B,OAAO0B,GAEtCS,EAAUR,EAAWjC,SAErB0C,EAAcR,EAAelC,SAE7BY,EAAa,WACxB,IAAM+B,EAAcV,EAAWrB,aACzBgC,EAAkBV,EAAetB,aACvC,OAAO+B,GAAeC,GCrBlBC,EAAQlF,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAQC,KAAK,OAAOsB,QAASsB,GAA7B,QAkBCW,EAhBC,WACd,IAAMnC,EAAUC,IACVmC,EAAON,IACPO,EAAWN,IACjB,OACE/E,EAAAC,EAAAC,cAACoC,EAAD,CACEU,QAASA,EACTsC,MAAOF,EACPF,MAAOA,EACP7E,MAAO,CAAEC,MAAO,IAAKC,OAAQ,KAE7BP,EAAAC,EAAAC,cAACqF,EAAD,CAAO5E,MAAO0E,MCGLF,EAhBC,WACd,IAAMnC,EAAUC,IACVmC,EAAON,IACPO,EAAWN,IACjB,OACE/E,EAAAC,EAAAC,cAACoC,EAAD,CACEgD,MAAOF,EACP/E,MAAO,CAAEC,MAAO,IAAKC,OAAQ,KAE7BP,EAAAC,EAAAC,cAACqF,EAAD,CAAO5E,MAAO0E,IACdrF,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAQqB,QAASA,EAASE,QAASsB,GAAnC,QACAxE,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAQqB,QAASA,EAASE,QAAS2B,GAAnC,WCVNnC,IACA8B,IAEA,ICamBgB,EDNJpD,EAPG,kBAChBpC,EAAAC,EAAAC,cAAA,OAAKG,MAAO,CAAEoF,QAAS,SACrBzF,EAAAC,EAAAC,cAACwF,EAAD,MACA1F,EAAAC,EAAAC,cAACyF,EAAD,uDCPE9D,GAASC,uBAAa,gBAEtBC,GAAe,SAACC,GAAD,OAAYH,GAAOI,IAAID,EAAEE,OAAOC,QAE/CyD,sLACK,IACCzD,EAAU0D,KAAKC,MAAf3D,MACR,OACCnC,EAAAC,EAAAC,cAACoC,EAAD,KACGH,EACDnC,EAAAC,EAAAC,cAACqC,EAAD,MACAvC,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAOQ,MAAOA,EAAOK,SAAUT,aAPTK,aAqBd2D,IARIP,EAQMI,GAPF,SAACE,GACpB,IAAM3D,EAAQN,GAAOQ,WACrB,OAAOrC,EAAAC,EAAAC,cAACsF,EAAD1F,OAAAM,OAAA,CAAa+B,MAAOA,GAAW2D,MCpBpCE,GAAiBlE,uBAAmB,MACpCmE,GAAkBnE,uBAAmB,MAErCoE,GAAQ,kBAAqB,IAAItD,QAAQ,SAAAC,GAAO,OAAIC,WAAW,kBAAMD,EAAQ,OAAO,QAEpFsD,GAAaH,GAAerD,OAAOuD,IAEnCE,GAAcH,GAAgBtD,OAAOuD,IAErCG,GAAW,WACf,IAAMrD,EAAUgD,GAAe/C,aAC/B,OAAOjD,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAQqB,QAASA,EAASE,QAASiD,IAAnC,mBAGHG,GAAY,WAChB,IAAMtD,EAAUiD,GAAgBhD,aAChC,OAAOjD,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAQqB,QAASA,EAASE,QAASkD,IAAnC,oBAGHG,GAAqB,WACzB,IAAMC,EAAcR,GAAe/C,aAC7BwD,EAAeR,GAAgBhD,aACrC,OAAOjD,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAQqB,QAASwD,GAAeC,EAAcC,UAAQ,GAAtD,yBAkBMC,GAfA,WACb,IAAMH,EAAcR,GAAe/C,aAC7BwD,EAAeR,GAAgBhD,aACrC,OACEjD,EAAAC,EAAAC,cAACoC,EAAD,KACEtC,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAMiF,SAAUJ,GAAeC,GAC7BzG,EAAAC,EAAAC,cAAC2G,GAAD,MACA7G,EAAAC,EAAAC,cAACqC,EAAD,MACAvC,EAAAC,EAAAC,cAAC4G,GAAD,MACA9G,EAAAC,EAAAC,cAACqC,EAAD,MACAvC,EAAAC,EAAAC,cAAC6G,GAAD,SC9BFC,GAAc,CAClBC,EAAG,CAAEC,GAAI,EAAG/E,MAAO,GACnBgF,EAAG,CAAED,GAAI,EAAG/E,MAAO,IAEjBpB,GAAQ,EAENqG,GAAU,SAAOC,GAAP,OAA6B,SAACC,GAAD,OAAyB,IAAI1E,QAAQ,SAACC,GACjFC,WAAW,WAAQD,EAAQwE,EAAKC,KAAW,SAGhCC,GAAUH,GAAQ,kBAAMJ,KAExBQ,GAAWJ,GAAQ,WAC9B,IAAME,EAAO,CAAEJ,GAAInG,GAAOoB,MAAOpB,IAGjC,OAFAiG,GAAKjG,IAASuG,EACdvG,IAAS,EACFuG,IAGIG,GAAUL,GAAS,SAACE,GAE/B,OADAN,GAAKM,EAAKJ,IAAMI,EACTN,GAAKM,EAAKJ,MAGNQ,GAAYN,GAAQ,SAACE,GAEhC,OADAN,GAAKM,EAAKJ,IAAMpH,OAAOM,OAAO4G,GAAKM,EAAKJ,IAAKI,GACtCN,GAAKM,EAAKJ,MAGNS,GAAaP,GAAQ,SAACF,GAEjC,cADOF,GAAKE,GACL,OC3BHU,GAAa9F,yBACnB8F,GAAWC,KAAKN,IAGhB,IAAMO,GAAYF,GAAWjF,OAAO4E,IAE9BQ,GAAaH,GAAWjF,OAC5B6E,GACA,WAAwB,IAAvB/C,EAAuBT,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIU,EAAWV,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEtB,OADAO,EAAMC,EAAOwC,IAAMxC,EACZD,IAILuD,GAAcJ,GAAWjF,OAC7B8E,GACA,WAAwB,IAAvBhD,EAAuBT,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIU,EAAWV,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEtB,OADAO,EAAMC,EAAOwC,IAAMxC,EACZD,IAILwD,GAAgBL,GAAWjF,OAC/B+E,GACA,WAAwB,IAAvBjD,EAAuBT,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIU,EAAWV,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEtB,OADAO,EAAMC,EAAOwC,IAAMxC,EACZD,IAILyD,GAAiBN,GAAWjF,OAChCgF,GACA,WAA4B,IAA3BlD,EAA2BT,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnB,GAAmBA,UAAAC,OAAA,GAAAD,UAAA,GAE1B,cADOS,EADmBT,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAEnBO,IC/CL2C,GAAU,SAAIC,GAAJ,OAAsB,kBAAkB,IAAIzE,QAAQ,SAACC,GACnEC,WAAW,WAAQD,EAAQwE,MAAY,SAGrCc,GAAS,EACAC,GAAShB,GAAQ,WAE5B,UAAArE,OADAoF,IAAU,KAIRE,GAAS,EACAC,GAASlB,GAAQ,WAE5B,UAAArE,OADAsF,IAAU,KCPNxG,GAASC,yBACTyG,GAAQ1G,GAAOc,OAAOyF,GAAQ,CAAElB,GAAI,MACpCsB,GAAQ3G,GAAOc,OAAO2F,GAAQ,CAAEpB,GAAI,MCSpCuB,GAAe3G,uBAAuB,CAAC,MAAO,MAAO,MAAO,MAAO,OAAOjB,IAAI,SAACe,EAAMb,GAAP,OANnE,SAACa,EAAcsF,GAAf,MAA+B,CAC9CA,GAAIwB,OAAOxB,GACXtF,OACAO,MAAK,GAAAY,OAAKnB,EAAL,KAAAmB,OAAamE,IAGiFyB,CAAS/G,EAAMb,MAC9G6H,GAAa9G,yBASb+G,GAAc,SAAC7G,GAAD,OAAY4G,GAAW3G,IAAID,EAAEE,OAAOC,QAyBzC2G,GAvBD,WACZ,IAAMC,EAAQN,GAAapG,WACrBT,EAAOgH,GAAWvG,WAClB2G,EAAgBC,kBACpB,kBAbqB,SAACF,EAAiBnH,GACzC,OAAIA,GAAiB,QAATA,EACHmH,EAAMG,OAAO,SAAA5B,GAAI,OAAIA,EAAK1F,OAASA,IAErCmH,EASCI,CAAiBJ,EAAOnH,IAC9B,CAACmH,EAAOnH,IAEV,OACE5B,EAAAC,EAAAC,cAACU,EAAA,SAAD,KACEZ,EAAAC,EAAAC,cAACoC,EAAD,KACEtC,EAAAC,EAAAC,cAACyB,EAAA,EAAMyH,MAAP,CAAajH,MAAOP,EAAMY,SAAUqG,IAClC7I,EAAAC,EAAAC,cAACyB,EAAA,EAAM0H,OAAP,CAAclH,MAAM,OAApB,OACAnC,EAAAC,EAAAC,cAACyB,EAAA,EAAM0H,OAAP,CAAclH,MAAM,OAApB,OACAnC,EAAAC,EAAAC,cAACyB,EAAA,EAAM0H,OAAP,CAAclH,MAAM,OAApB,SAGJnC,EAAAC,EAAAC,cAACoC,EAAD,KACEtC,EAAAC,EAAAC,cAACqF,EAAD,CAAO5E,MAAOqI,EAAcnI,IAAI,SAAAyI,GAAC,OAAIA,EAAEnH,aCnCzCoH,GAAiBC,iCAEjBzH,GAAe,SAACI,GAAD,OAAoBoH,GAAetH,IAAI,IAAKE,IAC3DsH,GAAc,SAACzH,GAAD,OAAYuH,GAAetH,IAAI,IAAKD,EAAEE,OAAOC,QAC3D0G,GAAc,SAAC7G,GAAD,OAAYuH,GAAetH,IAAI,IAAKD,EAAEE,OAAOC,QAC3DuH,GAAiB,SAACvH,GAAD,OAAkBoH,GAAetH,IAAI,IAAKE,IAE3DwH,GAAW,WAAM,IAAAC,EAGjBL,GAAe1F,SAAS,CAAC,IAAK,IAAK,IAAK,MAD1C5D,EAFmB2J,EAEnB3J,EAAG4J,EAFgBD,EAEhBC,EAAGC,EAFaF,EAEbE,EAAGC,EAFUH,EAEVG,EAEX,OACE/J,EAAAC,EAAAC,cAACoC,EAAD,KACEtC,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAQqI,QAAS/J,EAAGuC,SAAUT,KAC9B/B,EAAAC,EAAAC,cAACqC,EAAD,MACAvC,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAOQ,MAAO0H,EAAGrH,SAAUiH,KAC3BzJ,EAAAC,EAAAC,cAACqC,EAAD,MACAvC,EAAAC,EAAAC,cAACyB,EAAA,EAAMyH,MAAP,CAAajH,MAAO2H,EAAGtH,SAAUqG,GAAaoB,QAAS,CAAC,WAAY,WAAY,UAAW,aAC3FjK,EAAAC,EAAAC,cAACqC,EAAD,MACAvC,EAAAC,EAAAC,cAACyB,EAAA,EAASyH,MAAV,CAAgBa,QAAS,CAAC,QAAS,OAAQ,UAAW9H,MAAO4H,EAAGvH,SAAUkH,OAK1EQ,GAAS,WAAM,IAAAC,EAGfZ,GAAe1F,SAAS,CAAC,IAAK,IAAK,IAAK,MAD1C5D,EAFiBkK,EAEjBlK,EAAG4J,EAFcM,EAEdN,EAAGC,EAFWK,EAEXL,EAAGC,EAFQI,EAERJ,EAEX,OACE/J,EAAAC,EAAAC,cAACoC,EAAD,KACG8H,KAAKC,UAAU,CACdpK,IAAG4J,IAAGC,IAAGC,QAQFjB,GAFD,kBAAM9I,EAAAC,EAAAC,cAACU,EAAA,SAAD,KAAUZ,EAAAC,EAAAC,cAACoK,GAAD,MAAYtK,EAAAC,EAAAC,cAACqK,GAAD,QC/C7BC,GAAgB,SAACrI,GAAD,OAAoC,IAAIS,QAAQ,SAACC,EAASM,GACrFL,WACE,WACM4F,OAAO+B,OAAOtI,MAAYA,EAC5BU,EAAQV,GAERgB,EAAO,IAAIE,MAAM,wCAGrB,QCJEqH,GAAsB5I,uBAAqB,IAO3CC,GAAe,SAACC,GAAD,OALCG,EAKwBH,EAAEE,OAAOC,MAJrDuI,GAAoBzI,IAAIE,QACxBuI,GAAoB/H,OAAO6H,GAA3BE,CAA0CvI,GAFvB,IAACA,GAyCPwI,GArBO,WAAM,IAAAC,EACQF,GAAoB7G,WAA9Cb,EADkB4H,EAClB5H,QAASI,EADSwH,EACTxH,MAAOjB,EADEyI,EACFzI,MAClB0I,EAfkB,SAAAlL,GAAoC,IAAjCqD,EAAiCrD,EAAjCqD,QAASI,EAAwBzD,EAAxByD,MACpC,GAAc,KAD8CzD,EAAjBwC,MAI3C,OAAIa,EACK,aAELI,EACK,QAEF,UAKgB0H,CAAkB,CAAE9H,UAASI,QAAOjB,UACrD4I,EAAe3H,GAASA,EAAMK,QACpC,OACEzD,EAAAC,EAAAC,cAACoC,EAAD,KACEtC,EAAAC,EAAAC,cAACyB,EAAA,EAAKqJ,KAAN,CACEC,aAAW,EACXJ,eAAgBA,EAChBK,KAAMlI,EAAU,gBAAkB+H,GAElC/K,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CACEwJ,YAAY,mBACZhJ,MAAOA,EACPK,SAAUT,QCrCdqJ,GAAqBC,mCAAyB,mBAAoB,qCAElEtJ,GAAe,SAACC,GAAD,OAAYoJ,GAAmBnJ,IAAID,EAAEE,OAAOC,QAWlDmJ,GATY,WACzB,IAAMnJ,EAAQiJ,GAAmB/I,WACjC,OACErC,EAAAC,EAAAC,cAACoC,EAAD,KACEtC,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAOQ,MAAOA,EAAOK,SAAUT,OCZ/BwJ,GAAa,EAAC,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAM,GAC9DxK,IAAS,EAEAyK,GAAc,kBAAuB,IAAI5I,QAAQ,SAACC,EAASM,GACtEL,WAAW,WAELyI,GADJxK,IAAS,GAEP8B,EAAQ,cAERM,EAAO,IAAIE,MAAM,gBAElB,QAGQoI,GAAc,kBAAuB,IAAI7I,QAAQ,SAACC,EAASM,GACtEL,WAAW,WAELyI,GADJxK,IAAS,GAEP8B,EAAQ,cAERM,EAAO,IAAIE,MAAM,gBAElB,QCbCqI,GAAclC,iCAEdmC,GAAqB,WACzBD,GAAY7D,KAAK,SAAU2D,IAC3BE,GAAY7D,KAAK,SAAU4D,KAG7BE,KAEA,IAAMC,GAAY,SAAAjM,GAA0D,IAAvDqD,EAAuDrD,EAAvDqD,QAASI,EAA8CzD,EAA9CyD,MAC5B,OAAIJ,EACK,UAELI,EACK,eAEF,gBCTMyI,GAAA,CAAC,CACd7K,IAAK,aACL8K,MAAO,cACPC,UAAW,aACX3J,UAAWb,GACV,CACDP,IAAK,WACL8K,MAAO,WACPC,UAAW,QACX3J,UAAW4J,GACV,CACDhL,IAAK,aACL8K,MAAO,aACPC,UAAW,QACX3J,UAAW6J,GACV,CACDjL,IAAK,WACL8K,MAAO,WACPC,UAAW,QACX3J,UAAW8J,GACV,CACDlL,IAAK,WACL8K,MAAO,WACPC,UAAW,QACX3J,UAAW+J,GACV,CACDnL,IAAK,qBACL8K,MAAO,eACPC,UAAW,QACX3J,UAAWkJ,IACV,CACDtK,IAAK,gBACL8K,MAAO,iBACPC,UAAW,QACX3J,UDtBc,WAAM,IAAAgK,EAEuBV,GAAY7H,SAAS,CAAC,SAAU,WAAnEb,EAFYoJ,EAEZpJ,QAASI,EAFGgJ,EAEHhJ,MAAOiJ,EAFJD,EAEIC,OAAQC,EAFZF,EAEYE,OAChC,OACEtM,EAAAC,EAAAC,cAACoC,EAAD,KACG,WAAWtC,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAMC,KAAMgK,GAAU,CAAE5I,UAASI,YAC7CpD,EAAAC,EAAAC,cAACqC,EAAD,MACC,wCACDvC,EAAAC,EAAAC,cAAA,sBAAA6C,OAAiBsJ,EAAjB,cAAAtJ,OAAoCuJ,EAApC,OACC,yBACDtM,EAAAC,EAAAC,cAAA,6BAAA6C,OAAwBK,GAASA,EAAMK,QAAvC,OACAzD,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAQqB,QAASA,EAASE,QAASyI,IAAnC,gBCYH,CACD3K,IAAK,cACL8K,MAAO,eACPC,UAAW,WACX3J,UAAWmK,GACV,CACDvL,IAAK,kBACL8K,MAAO,mBACPC,UAAW,WACX3J,UAAWoK,IACV,CACDxL,IAAK,iBACL8K,MAAO,kBACPC,UAAW,WACX3J,UAAWwD,IACV,CACD5E,IAAK,cACL8K,MAAO,eACPC,UAAW,WACX3J,UAAWqK,IACV,CACDzL,IAAK,UACL8K,MAAO,UACPC,UAAW,WACX3J,UVba,WACb,IAAMY,EAAU4E,GAAW3E,aAErByJ,EAbY,WAAiB,IAAhBC,EAAgB3I,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACtB+E,EAAe,GAMrB,OALAjJ,OAAO8M,KAAKD,GAAQE,QAAQ,SAAC7L,GAE3B,IAAMsG,EAAOqF,EAAO3L,GACpB+H,EAAMpE,KAAK2C,KAENyB,EAMe+D,CADTlF,GAAWvF,YAExB,OACErC,EAAAC,EAAAC,cAACoC,EAAD,KACEtC,EAAAC,EAAAC,cAAA,KACEwB,KAAM,gEACNQ,OAAO,SACP6K,IAAI,uBAHN,oBAOA/M,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CACEqB,QAASA,EACTgK,WAAYN,EACZO,OAAQjN,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAQuB,QAAS4E,IAAjB,OACRoF,OAAQlN,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAQuB,QAAS6E,IAAjB,QACRoF,WACE,SAAC7F,GACC,IAAM8F,EAAW,CAAElG,GAAII,EAAKJ,GAAI/E,MAAOmF,EAAKnF,MAAQ,GAIpD,OACEnC,EAAAC,EAAAC,cAACyB,EAAA,EAAKqJ,KAAN,KACEhL,EAAAC,EAAAC,cAAA,QAAMG,MAAO,CAAEgN,KAAM,IAAM/F,EAAKnF,OAChCnC,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAQuB,QANM,kBAAM8E,GAAYoF,KAMhC,OACApN,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAQuB,QANQ,kBAAM+E,GAAcmF,KAMpC,SACApN,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAQuB,QANS,kBAAMgF,GAAeZ,EAAKJ,MAM3C,iBUfb,CACDlG,IAAK,MACL8K,MAAO,MACPC,UAAW,WACX3J,URvEa,WACb,IAAMD,EAAQN,GAAOQ,WACrB,OACErC,EAAAC,EAAAC,cAACoC,EAAD,KACEtC,EAAAC,EAAAC,cAAA,SACG,0EACDF,EAAAC,EAAAC,cAAA,KACEwB,KAAM,sCACNQ,OAAO,SACP6K,IAAI,uBAHN,kBAQF/M,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAQuB,QAASqF,IAAjB,SACAvI,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAQuB,QAASsF,IAAjB,SACAxI,EAAAC,EAAAC,cAACqC,EAAD,MACCJ,KQuDJ,CACDnB,IAAK,gBACL8K,MAAO,iBACPC,UAAW,WACX3J,UAAWuI,IACV,CACD3J,IAAK,OACL8K,MAAO,OACPC,UAAW,WACX3J,UAAWkL,0BCxFAC,WAAazL,0BCGpB0L,GAAgB,WACpB,GAAsB,qBAAXC,OACT,MAAM,IAAIpK,MAAM,oBAElB,MAAO,CACLqK,WAAYD,OAAOC,WACnBC,YAAaF,OAAOE,YACpBC,WAAYH,OAAOG,WACnBC,YAAaJ,OAAOI,cA2CTC,GAzBA,SAAAnO,GAA0B,IAAvBoO,EAAuBpO,EAAvBoO,YACRL,EAfY,WAAM,IAAAM,EAEFC,mBAAST,IAFPU,EAAApO,OAAAqO,EAAA,EAAArO,CAAAkO,EAAA,GAEnBI,EAFmBF,EAAA,GAEbG,EAFaH,EAAA,GAW1B,OARAI,oBACE,WACE,IAAMC,EAAmB,kBAAMF,EAAQb,OAEvC,OADAC,OAAOe,iBAAiB,SAAUD,GAC3B,kBAAMd,OAAOgB,oBAAoB,SAAUF,KAEpD,IAEKH,EAIgBM,GAAfhB,WACF1K,EAAUuK,GAAWtK,aACrB0L,EAAOpB,GAAWlL,WAQxB,OAPAiM,oBACE,YDhCoB,SAACP,GACvB,IAAMrM,EAAI,6EAAAqB,OAAgFgL,EAAhF,cACJa,EAAU,IAAIC,QAAQnN,GAE5B6L,GAAW1F,KADK,kBAAM3B,MAAM0I,GAASE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,WC8BjDC,CAASlB,IAEX,CAACA,IAGC/K,EACK,KAIPhD,EAAAC,EAAAC,cAACgP,GAAAjP,EAAD,CACEK,MAAOoN,EAAa,IACpBjN,OAAQ,IACR0O,SAAS,aACTC,MAAM,UACNjN,MAAOwM,yBCvBEU,GAtBE,SAAA1P,GAA0B,IAAvBoO,EAAuBpO,EAAvBoO,YACZuB,EAAc/B,GAAWtK,aAC3BsM,EAAsBC,KAAOb,KAIjC,OAHKW,IACHC,EAAmB,GAAAxM,OAAMyM,KAAOb,KAAb,KAAA5L,OAAqByM,KAAOC,OAG/CzP,EAAAC,EAAAC,cAAA,OAAKwP,UAAWF,KAAOG,WACrB3P,EAAAC,EAAAC,cAAA,OAAKwP,UAAWH,GACdvP,EAAAC,EAAAC,cAAA,KACEwB,KAAI,mEAAAqB,OAAqEgL,EAArE,cACJhB,IAAI,sBACJ7K,OAAO,UAEPlC,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAMC,KAAK,aAGf5B,EAAAC,EAAAC,cAAC0P,GAAD,CAAQ7B,YAAaA,MCNrB8B,GAAoB/N,uBAVF,WAAM,IACpBgO,EAAS7O,EAAQ8O,SAAjBD,KACFE,EAAyB,KAATF,EAAcA,EAAKlL,MAAM,GAAK,KAC9CqL,EAAmBC,cAAIrE,GAAQ,CAAC,IAAK,QAC3C,OAAKmE,QAAqE9L,IAApD2H,GAAOsE,KAAK,SAAAxQ,GAAA,OAAAA,EAAGqB,MAAkBgP,IAGhDA,EAFEC,EAK4BG,IAEjCH,GAAmBC,cAAIrE,GAAQ,CAAC,IAAK,QAErC3I,GAAU,SAAAmN,GAAkB,IAAfrP,EAAeqP,EAAfrP,IACjBC,EAAQqP,QAAR,IAAAvN,OAAoB/B,IACpB6O,GAAkB5N,IAAIjB,IAGlBuP,GAAW,SAAAC,GAAA,IAAGxP,EAAHwP,EAAGxP,IAAK8K,EAAR0E,EAAQ1E,MAAR,OAAyB9L,EAAAC,EAAAC,cAACyB,EAAA,EAAKqJ,KAAN,CAAWhK,IAAKA,GAAM8K,IAmB1D2E,GAjBkB,WACtB,IAAMC,EAAcC,kBAAQ9E,GAAQ,aAEpC,OAAO/L,OAAO8Q,QAAQF,GAAa7P,IAAI,SAAAgQ,GAA4B,IAAAC,EAAAhR,OAAAqO,EAAA,EAAArO,CAAA+Q,EAAA,GAA1B9E,EAA0B+E,EAAA,GAAfC,EAAeD,EAAA,GAC3DE,EAAgBD,EAAUlQ,IAAI0P,IACpC,OAAyB,IAArBQ,EAAU9M,OACL+M,EAGPhR,EAAAC,EAAAC,cAACyB,EAAA,EAAKsP,QAAN,CAAcjQ,IAAK+K,EAAWzG,MAAOyG,GAClCiF,KAOYE,GAmCNC,GAjCG,WAChB,IAAMnO,EAAU6M,GAAkB5M,aAC5B8K,EAAc8B,GAAkBxN,WACtC,GAAIW,EACF,OAAO,KAET,IAAMoO,EAAQvF,GAAOsE,KAAK,SAAAkB,GAAA,OAAAA,EAAGrQ,MAAkB+M,IAC/C,IAAKqD,EAEH,OADAvB,GAAkB5N,IAAIgO,IACf,KATa,IAWd7N,EAAyBgP,EAAzBhP,UAAW2J,EAAcqF,EAAdrF,UACnB,OACE/L,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAQtB,MAAO,CAAEI,OAAQ,UACvBT,EAAAC,EAAAC,cAACyB,EAAA,EAAO2P,MAAR,CAAchR,MAAO,IAAK8O,MAAM,QAAQ/O,MAAO,CAAEkR,UAAW,SAC1DvR,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CACE6P,KAAK,SACLC,gBAAiB,CAAC1F,GAClB2F,aAAc,CAAC3D,GACf7K,QAASA,GACT7C,MAAO,CAAEsR,UAAW,OAAQC,YAAa,sBAExCnB,KAGLzQ,EAAAC,EAAAC,cAACyB,EAAA,EAAOkQ,QAAR,KACE7R,EAAAC,EAAAC,cAACkC,EAAD,MACiB,eAAhB2L,GAAgC/N,EAAAC,EAAAC,cAAC4R,GAAD,CAAU/D,YAAaA,OCxEnDgE,GAAM/R,EAAAC,EAAAC,cAAC8R,GAAD,oBCGnBC,iBAAOF,GAAKG,SAASC,eAAe,6BCLpCC,EAAAC,QAAA,CAAkB1C,UAAA,4BAAAhB,KAAA,uBAAAc,KAAA","file":"static/js/main.bcef2447.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport { Card as AntdCard } from 'antd';\n\nconst Card: FC<any> = ({ children, ...rest }) => (\n  <AntdCard style={{ width: 500, margin: 30 }} {...rest}>{children}</AntdCard>\n);\n\nexport default Card;\n","import React from 'react';\n\nconst Divider = () => <div style={{ height: 10 }} />;\n\nexport default Divider;\n","import React, { Fragment, FC } from 'react';\n\nconst Lines: FC<{lines: string[]}> = ({ lines }) => (\n  <Fragment>\n    {lines && lines.map((f, index) => <p key={index || 0}>{f}</p>)}\n  </Fragment>\n);\n\nexport default Lines;\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","import React from 'react';\nimport { Icon } from '../components';\n\nconst IconFont = Icon.createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_942570_3ol64gksd4x.js',\n});\n\nconst pre = ''\n  + 'git clone https://github.com/regionjs/region-core.git\\n'\n  + 'cd example\\n'\n  + 'npm i\\n'\n  + 'npm start\\n';\n\nconst GetStarted = () => (\n  <div style={{ padding: 32 }}>\n    <h1>How to run this</h1>\n    <pre>{pre}</pre>\n    <h1>Related</h1>\n    <div style={{ fontSize: 18 }}>\n      <a href=\"https://github.com/regionjs/region-core\"><Icon type=\"github\" /> Github</a>\n      <span style={{ margin: '0 15px' }} />\n      <a href=\"https://www.npmjs.com/package/region-core\"><IconFont type=\"npm\" /> npm</a>\n      <span style={{ margin: '0 15px' }} />\n      <a href=\"https://github.com/regionjs/region-core/blob/master/docs/Document.md\"><IconFont type=\"docs\" /> Docs</a>\n    </div>\n  </div>\n);\n\nexport default GetStarted;\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Input, Card, Divider } from '../components';\n\nconst region = createRegion('initialValue');\n\nconst handleChange = (e: any) => region.set(e.target.value);\n\nconst Component = () => {\n  const value = region.useValue();\n  return (\n    <Card>\n      {value}\n      <Divider/>\n      <Input value={value} onChange={handleChange} />\n    </Card>\n  );\n};\n\nexport default Component;\n","let count = 0;\n\nexport const apiGetUser = () => new Promise(resolve => setTimeout(() => {\n  resolve(`user from api: ${count}`);\n  count++;\n}, 1000));\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Button, Card, Divider } from '../components';\nimport { apiGetUser } from './api';\n\nconst region = createRegion();\n\nconst loadUser = region.loadBy(apiGetUser);\n\n// application initial\nloadUser();\n\nconst Component = () => {\n  const loading = region.useLoading();\n  const value = region.useValue();\n\n  return (\n    <Card loading={loading}>\n      {value}\n      <Divider/>\n      <Button onClick={loadUser}>loadUser</Button>\n    </Card>\n  );\n};\n\nexport default Component;\n","let count = 0;\n\nexport const apiGetUser = () => new Promise((resolve, reject) => setTimeout(() => {\n  if (count > 3) {\n    const error = new Error(`error: ${count}`);\n    reject(error);\n  } else {\n    resolve(`user from api: ${count}`);\n  }\n  count++;\n}, 1000));\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Button, Card, Divider } from '../components';\nimport { apiGetUser } from './api';\n\nconst region = createRegion();\n\n// apiGetUser may reject\nconst loadUser = region.loadBy(apiGetUser);\n\nloadUser();\n\nconst Component = () => {\n  const loading = region.useLoading();\n  const value = region.useValue();\n  const error = region.useError();\n  const fetchTime = region.useFetchTime() || 0;\n\n  return (\n    <Card loading={loading}>\n      {value}\n      <Divider/>\n      {error && error.message}\n      <Divider/>\n      {new Date(fetchTime).toString()}\n      <Divider/>\n      <Button onClick={loadUser}>loadUser</Button>\n    </Card>\n  );\n};\n\nexport default Component;\n","let count = 0;\n\nexport const apiGetUser = () => new Promise((resolve, reject) => setTimeout(() => {\n  if (count > 3) {\n    const error = new Error(`error: ${count}`);\n    reject(error);\n  } else {\n    resolve(`user from api: ${count}`);\n  }\n  count++;\n}, 1000));\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Button, Card, Divider } from '../components';\nimport { apiGetUser } from './api';\n\nconst region = createRegion();\n\n// apiGetUser may reject\nconst loadUser = region.loadBy(apiGetUser);\n\nloadUser();\n\nconst Component = () => {\n  const { loading, error, fetchTime, value } = region.useProps();\n\n  return (\n    <Card loading={loading}>\n      {value}\n      <Divider/>\n      {error && error.message}\n      <Divider/>\n      {new Date(fetchTime).toString()}\n      <Divider/>\n      <Button onClick={loadUser}>loadUser</Button>\n    </Card>\n  );\n};\n\nexport default Component;\n","const fetchFactory = <T>(value: T, delay = 1000) => (): Promise<T> => new Promise((resolve) => {\n  setTimeout(() => { resolve(value); }, delay);\n});\n\nexport const fetchUser = fetchFactory('the user from api', 500);\nexport const fetchFollower = fetchFactory('some followers from api');\nexport const deleteFollower = fetchFactory([]);\n","import { createRegion } from 'region-core';\nimport { fetchUser, fetchFollower, deleteFollower } from './api';\n\nconst userRegion = createRegion<string[]>();\nconst followerRegion = createRegion<string[]>();\n\nexport const loadUser = userRegion.loadBy(fetchUser);\n\nexport const loadFollower = followerRegion.loadBy(\n  fetchFollower,\n  (state = [], result) => {\n    state.push(result);\n    return state.slice();\n  },\n);\n\nexport const clearFollower = followerRegion.loadBy(deleteFollower);\n\nexport const useUser = userRegion.useValue;\n\nexport const useFollower = followerRegion.useValue;\n\nexport const useLoading = () => {\n  const userLoading = userRegion.useLoading();\n  const followerLoading = followerRegion.useLoading();\n  return userLoading || followerLoading;\n};\n","import React from 'react';\nimport { Card, Button, Lines } from '../components';\nimport { loadFollower, useLoading, useUser, useFollower } from './load';\n\nconst extra = <Button type=\"link\" onClick={loadFollower}>More</Button>;\n\nconst Display = () => {\n  const loading = useLoading();\n  const user = useUser();\n  const follower = useFollower();\n  return (\n    <Card\n      loading={loading}\n      title={user}\n      extra={extra}\n      style={{ width: 300, margin: 30 }}\n    >\n      <Lines lines={follower} />\n    </Card>\n  );\n};\n\nexport default Display;\n","import React from 'react';\nimport { Card, Button, Lines } from '../components';\nimport { loadFollower, clearFollower, useLoading, useUser, useFollower } from './load';\n\nconst Display = () => {\n  const loading = useLoading();\n  const user = useUser();\n  const follower = useFollower();\n  return (\n    <Card\n      title={user}\n      style={{ width: 300, margin: 30 }}\n    >\n      <Lines lines={follower} />\n      <Button loading={loading} onClick={loadFollower}>More</Button>\n      <Button loading={loading} onClick={clearFollower}>Clear</Button>\n    </Card>\n  );\n};\n\nexport default Display;\n","import React from 'react';\nimport Display1 from './Display1';\nimport Display2 from './Display2';\nimport { loadFollower, loadUser } from './load';\n\nloadUser();\nloadFollower();\n\nconst Component = () => (\n  <div style={{ display: 'flex' }}>\n    <Display1 />\n    <Display2 />\n  </div>\n);\n\nexport default Component;\n","import React, { Component } from 'react';\nimport { createRegion } from 'region-core';\nimport { Input, Card, Divider } from '../components';\n\nconst region = createRegion('initialValue');\n\nconst handleChange = (e: any) => region.set(e.target.value);\n\nclass ClassComponent extends Component<{value: string}> {\n  render() {\n    const { value } = this.props;\n    return (\n     <Card>\n       {value}\n       <Divider/>\n       <Input value={value} onChange={handleChange} />\n     </Card>\n    );\n  }\n}\n\nconst withValue = (ComponentIn: any) => {\n  const ComponentOut = (props: any) => {\n    const value = region.useValue();\n    return <ComponentIn value={value} {...props}/>;\n  };\n  return ComponentOut;\n};\n\nexport default withValue(ClassComponent);\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Button, Spin, Card, Divider } from '../components';\n\nconst leftPartRegion = createRegion<null>(null);\nconst rightPartRegion = createRegion<null>(null);\n\nconst fetch = (): Promise<null> => new Promise(resolve => setTimeout(() => resolve(null), 1000));\n\nconst handleLeft = leftPartRegion.loadBy(fetch);\n\nconst handleRight = rightPartRegion.loadBy(fetch);\n\nconst LeftPart = () => {\n  const loading = leftPartRegion.useLoading();\n  return <Button loading={loading} onClick={handleLeft}>Load Left Part</Button>;\n};\n\nconst RightPart = () => {\n  const loading = rightPartRegion.useLoading();\n  return <Button loading={loading} onClick={handleRight}>Load Right Part</Button>;\n};\n\nconst SomethingIsLoading = () => {\n  const loadingLeft = leftPartRegion.useLoading();\n  const loadingRight = rightPartRegion.useLoading();\n  return <Button loading={loadingLeft || loadingRight} disabled>Something is loading</Button>;\n};\n\nconst Parent = () => {\n  const loadingLeft = leftPartRegion.useLoading();\n  const loadingRight = rightPartRegion.useLoading();\n  return (\n    <Card>\n      <Spin spinning={loadingLeft && loadingRight}>\n        <LeftPart />\n        <Divider />\n        <RightPart />\n        <Divider />\n        <SomethingIsLoading />\n      </Spin>\n    </Card>\n  );\n};\nexport default Parent;\n","interface Item {\n  id: number;\n  value: number;\n}\n\ninterface Shape {\n  [key: number]: Item;\n}\n\nconst list: Shape = {\n  0: { id: 0, value: 0 },\n  1: { id: 1, value: 1 },\n};\nlet index = 2;\n\nconst factory = <T, R>(func: (v: T) => R) => (item: T): Promise<R> => new Promise((resolve) => {\n  setTimeout(() => { resolve(func(item)); }, 500);\n});\n\nexport const getList = factory(() => list);\n\nexport const postList = factory(() => {\n  const item = { id: index, value: index };\n  list[index] = item;\n  index += 1;\n  return item;\n});\n\nexport const putList = factory(((item: Item) => {\n  list[item.id] = item;\n  return list[item.id];\n}));\n\nexport const patchList = factory((item: Item) => {\n  list[item.id] = Object.assign(list[item.id], item);\n  return list[item.id];\n});\n\nexport const deleteList = factory((id: number) => {\n  delete list[id];\n  return null;\n});\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Button, List, Card } from '../components';\nimport { getList, postList, putList, patchList, deleteList } from './mockList';\n\ninterface Item {\n  id: number;\n  value: number;\n}\n\ninterface Shape {\n  [key: number]: Item;\n}\nconst listRegion = createRegion<Shape>();\nlistRegion.load(getList);\n\n/* eslint-disable no-param-reassign */\nconst handleGet = listRegion.loadBy(getList);\n\nconst handlePost = listRegion.loadBy(\n  postList,\n  (state = {}, result) => {\n    state[result.id] = result;\n    return state;\n  },\n);\n\nconst handlePutBy = listRegion.loadBy(\n  putList,\n  (state = {}, result) => {\n    state[result.id] = result;\n    return state;\n  },\n);\n\nconst handlePatchBy = listRegion.loadBy(\n  patchList,\n  (state = {}, result) => {\n    state[result.id] = result;\n    return state;\n  },\n);\n\nconst handleDeleteBy = listRegion.loadBy(\n  deleteList,\n  (state = {}, result, id) => {\n    delete state[id];\n    return state;\n  },\n);\n/* eslint-enable no-param-reassign */\n\nconst deNormalize = (entity = {}) => {\n  const array: any[] = [];\n  Object.keys(entity).forEach((key) => {\n    // @ts-ignore\n    const item = entity[key];\n    array.push(item);\n  });\n  return array;\n};\n\nexport default () => {\n  const loading = listRegion.useLoading();\n  const list = listRegion.useValue();\n  const formattedList = deNormalize(list);\n  return (\n    <Card>\n      <a\n        href={'https://en.wikipedia.org/wiki/Representational_state_transfer'}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        What is RESTful?\n      </a>\n      <List\n        loading={loading}\n        dataSource={formattedList}\n        header={<Button onClick={handleGet}>GET</Button>}\n        footer={<Button onClick={handlePost}>POST</Button>}\n        renderItem={\n          (item) => {\n            const nextItem = { id: item.id, value: item.value + 1 };\n            const handlePut = () => handlePutBy(nextItem);\n            const handlePatch = () => handlePatchBy(nextItem);\n            const handleDelete = () => handleDeleteBy(item.id);\n            return (\n              <List.Item>\n                <span style={{ flex: 1 }}>{item.value}</span>\n                <Button onClick={handlePut}>PUT</Button>\n                <Button onClick={handlePatch}>PATCH</Button>\n                <Button onClick={handleDelete}>DELETE</Button>\n              </List.Item>\n            );\n          }\n        }\n      />\n    </Card>\n  );\n};\n","const factory = <O>(func: () => O) => (): Promise<O> => new Promise((resolve) => {\n  setTimeout(() => { resolve(func()); }, 500);\n});\n\nlet countA = 0;\nexport const fetchA = factory(() => {\n  countA += 1;\n  return `A${countA}`;\n});\n\nlet countB = 0;\nexport const fetchB = factory(() => {\n  countB += 1;\n  return `B${countB}`;\n});\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Button, Card, Divider } from '../components';\nimport { fetchA, fetchB } from './mock';\n\nconst region = createRegion();\nconst loadA = region.loadBy(fetchA, { id: 'A' });\nconst loadB = region.loadBy(fetchB, { id: 'B' });\n\nexport default () => {\n  const value = region.useValue();\n  return (\n    <Card>\n      <p>\n        {'stale-while-revalidate is a cache invalidation strategy popularized by '}\n        <a\n          href={'https://tools.ietf.org/html/rfc5861'}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          HTTP RFC 5861\n        </a>\n      </p>\n      <Button onClick={loadA}>loadA</Button>\n      <Button onClick={loadB}>loadB</Button>\n      <Divider />\n      {value}\n    </Card>\n  );\n};\n","import React, { Fragment, useMemo } from 'react';\nimport { createRegion } from 'region-core';\nimport { Radio, Card, Lines } from '../components';\n\ninterface Animal {\n  type: string;\n  id: string;\n  value: string;\n}\n\nconst generate = (type: string, id: number) => ({\n  id: String(id),\n  type,\n  value: `${type}-${id}`,\n});\n\nconst animalRegion = createRegion<Animal[]>(['cat', 'cat', 'dog', 'cat', 'dog'].map((type, index) => generate(type, index)));\nconst typeRegion = createRegion();\n\nconst getFilteredArray = (array: Animal[], type: string) => {\n  if (type && type !== 'all') {\n    return array.filter(item => item.type === type);\n  }\n  return array;\n};\n\nconst handleRadio = (e: any) => typeRegion.set(e.target.value);\n\nconst Panel = () => {\n  const array = animalRegion.useValue();\n  const type = typeRegion.useValue();\n  const memoizedArray = useMemo(\n    () => getFilteredArray(array, type),\n    [array, type],\n  );\n  return (\n    <Fragment>\n      <Card>\n        <Radio.Group value={type} onChange={handleRadio}>\n          <Radio.Button value=\"all\">All</Radio.Button>\n          <Radio.Button value=\"cat\">Cat</Radio.Button>\n          <Radio.Button value=\"dog\">Dog</Radio.Button>\n        </Radio.Group>\n      </Card>\n      <Card>\n        <Lines lines={memoizedArray.map(i => i.value)} />\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default Panel;\n","import React, { Fragment } from 'react';\nimport { createCombinedRegion } from 'region-core';\nimport { Input, Switch, Radio, Checkbox, Card, Divider } from '../components';\n\ninterface Shape {\n  a: boolean;\n  b: string;\n  c: string;\n  d: string[];\n}\nconst combinedRegion = createCombinedRegion<Shape>();\n\nconst handleChange = (value: boolean) => combinedRegion.set('a', value);\nconst handleInput = (e: any) => combinedRegion.set('b', e.target.value);\nconst handleRadio = (e: any) => combinedRegion.set('c', e.target.value);\nconst handleCheckBox = (value: any[]) => combinedRegion.set('d', value);\n\nconst FormCard = () => {\n  const {\n    a, b, c, d,\n  } = combinedRegion.useProps(['a', 'b', 'c', 'd']);\n  return (\n    <Card>\n      <Switch checked={a} onChange={handleChange} />\n      <Divider />\n      <Input value={b} onChange={handleInput} />\n      <Divider />\n      <Radio.Group value={c} onChange={handleRadio} options={['Hangzhou', 'Shanghai', 'Beijing', 'Chengdu']} />\n      <Divider />\n      <Checkbox.Group options={['Apple', 'Pear', 'Orange']} value={d} onChange={handleCheckBox} />\n    </Card>\n  );\n};\n\nconst Result = () => {\n  const {\n    a, b, c, d,\n  } = combinedRegion.useProps(['a', 'b', 'c', 'd']);\n  return (\n    <Card>\n      {JSON.stringify({\n        a, b, c, d,\n      })}\n    </Card>\n  );\n};\n\nconst Panel = () => <Fragment><FormCard /><Result /></Fragment>;\n\nexport default Panel;\n","export const fetchValidate = (value: string): Promise<string> => new Promise((resolve, reject) => {\n  setTimeout(\n    () => {\n      if (String(Number(value)) === value) {\n        resolve(value);\n      } else {\n        reject(new Error('message from api: type some number'));\n      }\n    },\n    1000,\n  );\n});\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Form, Input, Card } from '../components';\nimport { fetchValidate } from './api';\n\nconst asyncValidateRegion = createRegion<string>('');\n\nconst loadValidate = (value: string) => {\n  asyncValidateRegion.set(value);\n  asyncValidateRegion.loadBy(fetchValidate)(value);\n};\n\nconst handleChange = (e: any) => loadValidate(e.target.value);\n\nconst getValidateStatus = ({ loading, error, value }: any) => {\n  if (value === '') {\n    return undefined;\n  }\n  if (loading) {\n    return 'validating';\n  }\n  if (error) {\n    return 'error';\n  }\n  return 'success';\n};\n\nconst AsyncValidate = () => {\n  const { loading, error, value } = asyncValidateRegion.useProps();\n  const validateStatus = getValidateStatus({ loading, error, value });\n  const errorMessage = error && error.message;\n  return (\n    <Card>\n      <Form.Item\n        hasFeedback\n        validateStatus={validateStatus}\n        help={loading ? 'validating...' : errorMessage}\n      >\n        <Input\n          placeholder=\"type some number\"\n          value={value}\n          onChange={handleChange}\n        />\n      </Form.Item>\n    </Card>\n  );\n};\n\nexport default AsyncValidate;\n","import React from 'react';\nimport { createLocalStorageRegion } from 'region-core';\nimport { Input, Card } from '../components';\n\nconst localStorageRegion = createLocalStorageRegion('localStorage-key', 'some value stored in localStorage');\n\nconst handleChange = (e: any) => localStorageRegion.set(e.target.value);\n\nconst LocalStorageRegion = () => {\n  const value = localStorageRegion.useValue();\n  return (\n    <Card>\n      <Input value={value} onChange={handleChange} />\n    </Card>\n  );\n};\n\nexport default LocalStorageRegion;\n","const toggleList = [false, false, false, true, true, false, true, true];\nlet index = -1;\n\nexport const fetchValue1 = (): Promise<string> => new Promise((resolve, reject) => {\n  setTimeout(() => {\n    index += 1;\n    if (toggleList[index]) {\n      resolve('resolved 1');\n    } else {\n      reject(new Error('rejected 1'));\n    }\n  }, 1000);\n});\n\nexport const fetchValue2 = (): Promise<string> => new Promise((resolve, reject) => {\n  setTimeout(() => {\n    index += 1;\n    if (toggleList[index]) {\n      resolve('resolved 2');\n    } else {\n      reject(new Error('rejected 2'));\n    }\n  }, 1000);\n});\n","import React from 'react';\nimport { createCombinedRegion } from 'region-core';\nimport { Button, Divider, Icon, Card } from '../components';\nimport { fetchValue1, fetchValue2 } from './api';\n\ninterface Shape {\n  value1: string;\n  value2: string;\n}\nconst errorRegion = createCombinedRegion<Shape>();\n\nconst loadValueWithError = () => {\n  errorRegion.load('value1', fetchValue1);\n  errorRegion.load('value2', fetchValue2);\n};\n\nloadValueWithError();\n\nconst getStatus = ({ loading, error }: {loading: boolean, error: Error}) => {\n  if (loading) {\n    return 'loading';\n  }\n  if (error) {\n    return 'close-circle';\n  }\n  return 'check-circle';\n};\n\nconst Display = () => {\n  // loading and error is combined\n  const { loading, error, value1, value2 } = errorRegion.useProps(['value1', 'value2']);\n  return (\n    <Card>\n      {'Status: '}<Icon type={getStatus({ loading, error })} />\n      <Divider />\n      {'Value will remain last resolved value'}\n      <pre>{`value1: ${value1}\\nvalue2: ${value2}\\n`}</pre>\n      {'Error will be combined'}\n      <pre>{`error message: ${error && error.message}\\n`}</pre>\n      <Button loading={loading} onClick={loadValueWithError}>Try Again</Button>\n    </Card>\n  );\n};\n\nexport default Display;\n","import GetStarted from '../GetStarted';\nimport UseValue from '../UseValue';\nimport UseLoading from '../UseLoading';\nimport UseError from '../UseError';\nimport UseProps from '../UseProps';\nimport SharedValue from '../SharedValue';\nimport ClassComponent from '../ClassComponent';\nimport AdvancedLoading from '../AdvancedLoading';\nimport RESTful from '../RESTful';\nimport SWR from '../SWR';\nimport SelectValue from '../SelectValue';\nimport Form from '../Form';\nimport AsyncValidate from '../AsyncValidate';\nimport LocalStorageRegion from '../LocalStorageRegion';\nimport CombinedError from '../CombinedError';\n\nexport default [{\n  key: 'GetStarted',\n  label: 'Get Started',\n  groupName: 'GetStarted',\n  Component: GetStarted,\n}, {\n  key: 'UseValue',\n  label: 'useValue',\n  groupName: 'Basic',\n  Component: UseValue,\n}, {\n  key: 'UseLoading',\n  label: 'useLoading',\n  groupName: 'Basic',\n  Component: UseLoading,\n}, {\n  key: 'UseError',\n  label: 'useError',\n  groupName: 'Basic',\n  Component: UseError,\n}, {\n  key: 'UseProps',\n  label: 'useProps',\n  groupName: 'Basic',\n  Component: UseProps,\n}, {\n  key: 'LocalStorageRegion',\n  label: 'localStorage',\n  groupName: 'Basic',\n  Component: LocalStorageRegion,\n}, {\n  key: 'CombinedError',\n  label: 'Combined Error',\n  groupName: 'Basic',\n  Component: CombinedError,\n}, {\n  key: 'SharedValue',\n  label: 'Shared Value',\n  groupName: 'Advanced',\n  Component: SharedValue,\n}, {\n  key: 'AdvancedLoading',\n  label: 'Advanced Loading',\n  groupName: 'Advanced',\n  Component: AdvancedLoading,\n}, {\n  key: 'ClassComponent',\n  label: 'Class Component',\n  groupName: 'Advanced',\n  Component: ClassComponent,\n}, {\n  key: 'SelectValue',\n  label: 'Select Value',\n  groupName: 'Advanced',\n  Component: SelectValue,\n}, {\n  key: 'RESTful',\n  label: 'RESTful',\n  groupName: 'Advanced',\n  Component: RESTful,\n}, {\n  key: 'SWR',\n  label: 'SWR',\n  groupName: 'Advanced',\n  Component: SWR,\n}, {\n  key: 'AsyncValidate',\n  label: 'Async Validate',\n  groupName: 'Advanced',\n  Component: AsyncValidate,\n}, {\n  key: 'Form',\n  label: 'Form',\n  groupName: 'Advanced',\n  Component: Form,\n}];\n","import { createRegion } from 'region-core';\n\nexport const codeRegion = createRegion();\n\nexport const loadCode = (selectedKey: any) => {\n  const href = `https://raw.githubusercontent.com/regionjs/region-core/master/example/src/${selectedKey}/index.tsx`;\n  const request = new Request(href);\n  const fetcher = () => fetch(request).then(res => res.text());\n  codeRegion.load(fetcher);\n};\n","import React, { useState, useEffect } from 'react';\nimport MonacoEditor from 'react-monaco-editor';\nimport 'monaco-editor/esm/vs/basic-languages/javascript/javascript.contribution';\nimport { codeRegion, loadCode } from './codeRegion';\n\nconst getWindowSize = () => {\n  if (typeof window === 'undefined') {\n    throw new Error('window undefined');\n  }\n  return {\n    innerWidth: window.innerWidth,\n    innerHeight: window.innerHeight,\n    outerWidth: window.outerWidth,\n    outerHeight: window.outerHeight,\n  };\n};\n\nconst useWindowSize = () => {\n  // 窗口的尺寸事实上和页面内容是无关的，所以没必要等组件布局后再读，初始化的时候直接拿就好\n  const [size, setSize] = useState(getWindowSize);\n  useEffect(\n    () => {\n      const updateWindowSize = () => setSize(getWindowSize());\n      window.addEventListener('resize', updateWindowSize);\n      return () => window.removeEventListener('resize', updateWindowSize);\n    },\n    [],\n  );\n  return size;\n};\n\nconst Editor = ({ selectedKey }: any) => {\n  const { innerWidth } = useWindowSize();\n  const loading = codeRegion.useLoading();\n  const code = codeRegion.useValue();\n  useEffect(\n    () => {\n      loadCode(selectedKey);\n    },\n    [selectedKey],\n  );\n\n  if (loading) {\n    return null;\n  }\n\n  return (\n    <MonacoEditor\n      width={innerWidth - 260}\n      height={500}\n      language=\"javascript\"\n      theme=\"vs-dark\"\n      value={code}\n    />\n  );\n};\nexport default Editor;\n","/* global window */\nimport React from 'react';\nimport { Icon } from '../components';\nimport Editor from './Editor';\nimport styles from './External.module.css';\nimport { codeRegion } from './codeRegion';\n\nconst External = ({ selectedKey }: any) => {\n  const codeLoading = codeRegion.useLoading();\n  let gotoDefinitionClass = styles.code;\n  if (!codeLoading) {\n    gotoDefinitionClass = `${styles.code} ${styles.dark}`;\n  }\n  return (\n    <div className={styles.container}>\n      <div className={gotoDefinitionClass}>\n        <a\n          href={`https://github.com/regionjs/region-core/blob/master/example/src/${selectedKey}/index.tsx`}\n          rel=\"noreferrer noopener\"\n          target=\"_blank\"\n        >\n          <Icon type=\"github\" />\n        </a>\n      </div>\n      <Editor selectedKey={selectedKey} />\n    </div>\n  );\n};\n\nexport default External;\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { get, groupBy } from 'lodash';\nimport { Menu, Layout } from '../components';\nimport history from './history';\nimport routes from './routes';\nimport External from './External';\n\nconst initSelectedKey = () => {\n  const { hash } = history.location;\n  const initSelectKey = hash !== '' ? hash.slice(1) : null;\n  const defaultSelectKey = get(routes, ['0', 'key']);\n  if (!initSelectKey || routes.find(({ key }) => key === initSelectKey) === undefined) {\n    return defaultSelectKey;\n  }\n  return initSelectKey;\n};\n\nconst selectedKeyRegion = createRegion(initSelectedKey());\n\nconst defaultSelectKey = get(routes, ['0', 'key']);\n\nconst onClick = ({ key }: any) => {\n  history.replace(`#${key}`);\n  selectedKeyRegion.set(key);\n};\n\nconst MenuItem = ({ key, label }: any) => <Menu.Item key={key}>{label}</Menu.Item>;\n\nconst getMenuElements = () => {\n  const routeGroups = groupBy(routes, 'groupName');\n\n  return Object.entries(routeGroups).map(([groupName, routeList]) => {\n    const routeElements = routeList.map(MenuItem);\n    if (routeList.length === 1) {\n      return routeElements;\n    }\n    return (\n      <Menu.SubMenu key={groupName} title={groupName} >\n        {routeElements}\n      </Menu.SubMenu>\n    );\n  });\n  // routes.map(MenuItem);\n};\n\nconst menuElements = getMenuElements();\n\nconst AppLayout = () => {\n  const loading = selectedKeyRegion.useLoading();\n  const selectedKey = selectedKeyRegion.useValue();\n  if (loading) {\n    return null;\n  }\n  const route = routes.find(({ key }) => key === selectedKey);\n  if (!route) {\n    selectedKeyRegion.set(defaultSelectKey);\n    return null;\n  }\n  const { Component, groupName } = route;\n  return (\n    <Layout style={{ height: '100vh' }}>\n      <Layout.Sider width={200} theme=\"light\" style={{ overflowY: 'auto' }}>\n        <Menu\n          mode=\"inline\"\n          defaultOpenKeys={[groupName]}\n          selectedKeys={[selectedKey]}\n          onClick={onClick}\n          style={{ minHeight: '100%', borderRight: '1px solid #e8e8e8' }}\n        >\n          {menuElements}\n        </Menu>\n      </Layout.Sider>\n      <Layout.Content>\n        <Component />\n        {selectedKey !== 'GetStarted' && <External selectedKey={selectedKey} />}\n      </Layout.Content>\n    </Layout>\n  );\n};\n\nexport default AppLayout;\n","import React from 'react';\nimport AppLayout from './AppLayout';\n\nexport const app = <AppLayout />;\n","/* global document */\nimport { render } from 'react-dom';\nimport { app } from './App';\nimport 'antd/dist/antd.css';\nimport './index.css';\n\nrender(app, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"External_container__3kfjg\",\"code\":\"External_code__2CA5Y\",\"dark\":\"External_dark__3N0bp\"};"],"sourceRoot":""}