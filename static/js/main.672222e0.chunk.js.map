{"version":3,"sources":["components/Card.tsx","components/Divider.tsx","components/Lines.tsx","App/history.ts","GetStarted/index.tsx","UseValue/index.tsx","UseLoading/api.ts","UseLoading/index.tsx","UseError/api.ts","UseError/index.tsx","UseProps/api.ts","UseProps/index.tsx","SharedValue/api.ts","SharedValue/load.ts","SharedValue/Display1.tsx","SharedValue/Display2.tsx","SharedValue/index.tsx","ClassComponent/index.tsx","AdvancedLoading/index.tsx","RESTful/mockList.ts","RESTful/index.tsx","SWR/mock.ts","SWR/index.tsx","SelectValue/index.tsx","Form/index.tsx","AsyncValidate/api.ts","AsyncValidate/index.tsx","LocalStorageRegion/index.tsx","CombinedError/api.ts","CombinedError/index.tsx","App/routes.ts","App/codeRegion.tsx","App/Editor.tsx","App/External.tsx","App/AppLayout.tsx","App/index.tsx","index.ts","App/External.module.css"],"names":["Card","children","rest","style","width","margin","Divider","height","Lines","lines","map","f","index","key","history","createBrowserHistory","IconFont","createFromIconfontCN","scriptUrl","GetStarted","padding","fontSize","href","GithubOutlined","type","region","createRegion","handleChange","e","set","target","value","Component","useValue","onChange","count","apiGetUser","Promise","resolve","setTimeout","loadUser","load","loading","useLoading","onClick","reject","error","Error","useError","fetchTime","useFetchTime","message","Date","toString","useProps","fetchFactory","delay","fetchUser","fetchFollower","deleteFollower","userRegion","followerRegion","loadBy","loadFollower","state","result","push","slice","clearFollower","useUser","useFollower","userLoading","followerLoading","extra","Display","user","follower","title","ComponentIn","display","Display1","Display2","ClassComponent","this","props","withValue","leftPartRegion","rightPartRegion","fetch","handleLeft","handleRight","LeftPart","RightPart","SomethingIsLoading","loadingLeft","loadingRight","disabled","Parent","useEffect","spinning","list","0","id","1","factory","func","item","getList","postList","putList","patchList","Object","assign","deleteList","listRegion","handleGet","handlePost","handlePutBy","handlePatchBy","handleDeleteBy","countA","fetchA","countB","fetchB","createMappedRegion","loadA","loadB","animalRegion","String","generate","typeRegion","handleRadio","Panel","array","memoizedArray","useMemo","filter","getFilteredArray","Group","Button","i","combinedRegion","createCombinedRegion","handleInput","handleCheckBox","FormCard","a","b","c","d","checked","options","Result","JSON","stringify","fetchValidate","Number","asyncValidateRegion","AsyncValidate","validateStatus","getValidateStatus","errorMessage","Item","hasFeedback","help","placeholder","localStorageRegion","createLocalStorageRegion","LocalStorageRegion","toggleList","fetchValue1","fetchValue2","errorRegion","loadValueWithError","label","groupName","UseValue","UseLoading","UseError","UseProps","value1","value2","LoadingOutlined","CloseCircleOutlined","CheckCircleOutlined","getIcon","SharedValue","AdvancedLoading","SelectValue","formattedList","entity","keys","forEach","deNormalize","rel","dataSource","header","footer","renderItem","nextItem","flex","useState","current","setCurrent","handleClickA","useCallback","handleClickB","Form","codeRegion","getWindowSize","window","innerWidth","innerHeight","outerWidth","outerHeight","Editor","selectedKey","size","setSize","updateWindowSize","addEventListener","removeEventListener","useWindowSize","code","request","Request","then","res","text","loadCode","language","theme","External","codeLoading","gotoDefinitionClass","styles","dark","className","container","selectedKeyRegion","hash","location","initSelectKey","defaultSelectKey","get","routes","undefined","find","initSelectedKey","replace","MenuItem","menuElements","routeGroups","groupBy","entries","routeList","routeElements","length","SubMenu","getMenuElements","AppLayout","route","Sider","overflowY","mode","defaultOpenKeys","selectedKeys","minHeight","borderRight","Content","app","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.672222e0.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport { Card as AntdCard } from 'antd';\n\nconst Card: FC<any> = ({ children, ...rest }) => (\n  <AntdCard style={{ width: 500, margin: 30 }} {...rest}>{children}</AntdCard>\n);\n\nexport default Card;\n","import React from 'react';\n\nconst Divider = () => <div style={{ height: 10 }} />;\n\nexport default Divider;\n","import React, { Fragment, FC } from 'react';\n\nconst Lines: FC<{lines: string[]}> = ({ lines }) => (\n  <Fragment>\n    {lines && lines.map((f, index) => <p key={index || 0}>{f}</p>)}\n  </Fragment>\n);\n\nexport default Lines;\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","import React from 'react';\nimport { createFromIconfontCN, GithubOutlined } from '@ant-design/icons';\n\nconst IconFont = createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_942570_3ol64gksd4x.js',\n});\n\nconst pre = ''\n  + 'git clone https://github.com/regionjs/region-core.git\\n'\n  + 'cd example\\n'\n  + 'npm i\\n'\n  + 'npm start\\n';\n\nconst GetStarted = () => (\n  <div style={{ padding: 32 }}>\n    <h1>How to run this</h1>\n    <pre>{pre}</pre>\n    <h1>Related</h1>\n    <div style={{ fontSize: 18 }}>\n      <a href=\"https://github.com/regionjs/region-core\"><GithubOutlined /> Github</a>\n      <span style={{ margin: '0 15px' }} />\n      <a href=\"https://www.npmjs.com/package/region-core\"><IconFont type=\"npm\" /> npm</a>\n      <span style={{ margin: '0 15px' }} />\n      <a href=\"https://github.com/regionjs/region-core/blob/master/docs/Document.md\"><IconFont type=\"docs\" /> Docs</a>\n    </div>\n  </div>\n);\n\nexport default GetStarted;\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Input, Card, Divider } from '../components';\n\nconst region = createRegion('initialValue');\n\nconst handleChange = (e: any) => region.set(e.target.value);\n\nconst Component = () => {\n  const value = region.useValue();\n  return (\n    <Card>\n      {value}\n      <Divider/>\n      <Input value={value} onChange={handleChange} />\n    </Card>\n  );\n};\n\nexport default Component;\n","let count = 0;\n\nexport const apiGetUser = () => new Promise(resolve => setTimeout(() => {\n  resolve(`user from api: ${count}`);\n  count++;\n}, 1000));\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Button, Card, Divider } from '../components';\nimport { apiGetUser } from './api';\n\nconst region = createRegion();\n\nconst loadUser = () => region.load(apiGetUser);\n\n// application initial\nloadUser();\n\nconst Component = () => {\n  const loading = region.useLoading();\n  const value = region.useValue();\n\n  return (\n    <Card loading={loading}>\n      {value}\n      <Divider/>\n      <Button onClick={loadUser}>loadUser</Button>\n    </Card>\n  );\n};\n\nexport default Component;\n","let count = 0;\n\nexport const apiGetUser = () => new Promise((resolve, reject) => setTimeout(() => {\n  if (count > 3) {\n    const error = new Error(`error: ${count}`);\n    reject(error);\n  } else {\n    resolve(`user from api: ${count}`);\n  }\n  count++;\n}, 1000));\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Button, Card, Divider } from '../components';\nimport { apiGetUser } from './api';\n\nconst region = createRegion();\n\n// apiGetUser may reject\nconst loadUser = () => region.load(apiGetUser);\n\nloadUser();\n\nconst Component = () => {\n  const loading = region.useLoading();\n  const value = region.useValue();\n  const error = region.useError();\n  const fetchTime = region.useFetchTime() || 0;\n\n  return (\n    <Card loading={loading}>\n      {value}\n      <Divider/>\n      {error && error.message}\n      <Divider/>\n      {new Date(fetchTime).toString()}\n      <Divider/>\n      <Button onClick={loadUser}>loadUser</Button>\n    </Card>\n  );\n};\n\nexport default Component;\n","let count = 0;\n\nexport const apiGetUser = () => new Promise((resolve, reject) => setTimeout(() => {\n  if (count > 3) {\n    const error = new Error(`error: ${count}`);\n    reject(error);\n  } else {\n    resolve(`user from api: ${count}`);\n  }\n  count++;\n}, 1000));\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Button, Card, Divider } from '../components';\nimport { apiGetUser } from './api';\n\nconst region = createRegion();\n\n// apiGetUser may reject\nconst loadUser = () => region.load(apiGetUser);\n\nloadUser();\n\nconst Component = () => {\n  const { loading, error, fetchTime, value } = region.useProps();\n\n  return (\n    <Card loading={loading}>\n      {value}\n      <Divider/>\n      {error && error.message}\n      <Divider/>\n      {new Date(fetchTime).toString()}\n      <Divider/>\n      <Button onClick={loadUser}>loadUser</Button>\n    </Card>\n  );\n};\n\nexport default Component;\n","const fetchFactory = <T>(value: T, delay = 1000) => (): Promise<T> => new Promise((resolve) => {\n  setTimeout(() => { resolve(value); }, delay);\n});\n\nexport const fetchUser = fetchFactory('the user from api', 500);\nexport const fetchFollower = fetchFactory('some followers from api');\nexport const deleteFollower = fetchFactory([]);\n","import { createRegion } from 'region-core';\nimport { fetchUser, fetchFollower, deleteFollower } from './api';\n\nconst userRegion = createRegion<string[]>([]);\nconst followerRegion = createRegion<string[]>([]);\n\nexport const loadUser = userRegion.loadBy(fetchUser);\n\nexport const loadFollower = () => followerRegion.load(\n  fetchFollower,\n  (state = [], result) => {\n    state.push(result);\n    return state.slice();\n  },\n);\n\nexport const clearFollower = () => followerRegion.load(deleteFollower);\n\nexport const useUser = userRegion.useValue;\n\nexport const useFollower = followerRegion.useValue;\n\nexport const useLoading = () => {\n  const userLoading = userRegion.useLoading();\n  const followerLoading = followerRegion.useLoading();\n  return userLoading || followerLoading;\n};\n","import React from 'react';\nimport { Card, Button, Lines } from '../components';\nimport { loadFollower, useLoading, useUser, useFollower } from './load';\n\nconst extra = <Button type=\"link\" onClick={loadFollower}>More</Button>;\n\nconst Display = () => {\n  const loading = useLoading();\n  const user = useUser();\n  const follower = useFollower();\n  return (\n    <Card\n      loading={loading}\n      title={user}\n      extra={extra}\n      style={{ width: 300, margin: 30 }}\n    >\n      <Lines lines={follower} />\n    </Card>\n  );\n};\n\nexport default Display;\n","import React from 'react';\nimport { Space } from 'antd';\nimport { Card, Button, Lines } from '../components';\nimport { loadFollower, clearFollower, useLoading, useUser, useFollower } from './load';\n\nconst Display = () => {\n  const loading = useLoading();\n  const user = useUser();\n  const follower = useFollower();\n  return (\n    <Card\n      title={user}\n      style={{ width: 300, margin: 30 }}\n    >\n      <Lines lines={follower} />\n      <Space>\n        <Button loading={loading} onClick={loadFollower}>More</Button>\n        <Button loading={loading} onClick={clearFollower}>Clear</Button>\n      </Space>\n    </Card>\n  );\n};\n\nexport default Display;\n","import React from 'react';\nimport Display1 from './Display1';\nimport Display2 from './Display2';\nimport { loadFollower, loadUser } from './load';\n\nloadUser();\nloadFollower();\n\nconst Component = () => (\n  <div style={{ display: 'flex' }}>\n    <Display1 />\n    <Display2 />\n  </div>\n);\n\nexport default Component;\n","import React, { Component } from 'react';\nimport { createRegion } from 'region-core';\nimport { Input, Card, Divider } from '../components';\n\nconst region = createRegion('initialValue');\n\nconst handleChange = (e: any) => region.set(e.target.value);\n\nclass ClassComponent extends Component<{value: string}> {\n  render() {\n    const { value } = this.props;\n    return (\n     <Card>\n       {value}\n       <Divider/>\n       <Input value={value} onChange={handleChange} />\n     </Card>\n    );\n  }\n}\n\nconst withValue = (ComponentIn: any) => {\n  const ComponentOut = (props: any) => {\n    const value = region.useValue();\n    return <ComponentIn value={value} {...props}/>;\n  };\n  return ComponentOut;\n};\n\nexport default withValue(ClassComponent);\n","import React, {useEffect} from 'react';\nimport { createRegion } from 'region-core';\nimport { Button, Spin, Card, Divider } from '../components';\n\nconst leftPartRegion = createRegion<null>();\nconst rightPartRegion = createRegion<null>();\n\nconst fetch = (): Promise<null> => new Promise(resolve => setTimeout(() => resolve(null), 1000));\n\nconst handleLeft = () => leftPartRegion.load(fetch);\n\nconst handleRight = () => rightPartRegion.load(fetch);\n\nconst LeftPart = () => {\n  const loading = leftPartRegion.useLoading();\n  return <Button loading={loading} onClick={handleLeft}>Load Left Part</Button>;\n};\n\nconst RightPart = () => {\n  const loading = rightPartRegion.useLoading();\n  return <Button loading={loading} onClick={handleRight}>Load Right Part</Button>;\n};\n\nconst SomethingIsLoading = () => {\n  const loadingLeft = leftPartRegion.useLoading();\n  const loadingRight = rightPartRegion.useLoading();\n  return <Button loading={loadingLeft || loadingRight} disabled>Something is loading</Button>;\n};\n\nconst Parent = () => {\n  const loadingLeft = leftPartRegion.useLoading();\n  const loadingRight = rightPartRegion.useLoading();\n\n  useEffect(\n    () => {\n      handleLeft();\n      handleRight();\n    },\n    []\n  )\n\n  return (\n    <Card>\n      <Spin spinning={loadingLeft && loadingRight}>\n        <LeftPart />\n        <Divider />\n        <RightPart />\n        <Divider />\n        <SomethingIsLoading />\n      </Spin>\n    </Card>\n  );\n};\nexport default Parent;\n","interface Item {\n  id: number;\n  value: number;\n}\n\ninterface Shape {\n  [key: number]: Item;\n}\n\nconst list: Shape = {\n  0: { id: 0, value: 0 },\n  1: { id: 1, value: 1 },\n};\nlet index = 2;\n\nconst factory = <T, R>(func: (v: T) => R) => (item: T): Promise<R> => new Promise((resolve) => {\n  setTimeout(() => { resolve(func(item)); }, 500);\n});\n\nexport const getList = factory(() => list);\n\nexport const postList = factory(() => {\n  const item = { id: index, value: index };\n  list[index] = item;\n  index += 1;\n  return item;\n});\n\nexport const putList = factory(((item: Item) => {\n  list[item.id] = item;\n  return list[item.id];\n}));\n\nexport const patchList = factory((item: Item) => {\n  list[item.id] = Object.assign(list[item.id], item);\n  return list[item.id];\n});\n\nexport const deleteList = factory((id: number) => {\n  delete list[id];\n  return null;\n});\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Button, List, Card } from '../components';\nimport { getList, postList, putList, patchList, deleteList } from './mockList';\n\ninterface Item {\n  id: number;\n  value: number;\n}\n\ninterface Shape {\n  [key: number]: Item;\n}\nconst listRegion = createRegion<Shape>();\nlistRegion.load(getList);\n\n/* eslint-disable no-param-reassign */\nconst handleGet = listRegion.loadBy(getList);\n\nconst handlePost = listRegion.loadBy(\n  postList,\n  (state = {}, result) => {\n    state[result.id] = result;\n    return state;\n  },\n);\n\nconst handlePutBy = listRegion.loadBy(\n  putList,\n  (state = {}, result) => {\n    state[result.id] = result;\n    return state;\n  },\n);\n\nconst handlePatchBy = listRegion.loadBy(\n  patchList,\n  (state = {}, result) => {\n    state[result.id] = result;\n    return state;\n  },\n);\n\nconst handleDeleteBy = listRegion.loadBy(\n  deleteList,\n  (state = {}, result, id) => {\n    delete state[id];\n    return state;\n  },\n);\n/* eslint-enable no-param-reassign */\n\nconst deNormalize = (entity = {}) => {\n  const array: any[] = [];\n  Object.keys(entity).forEach((key) => {\n    // @ts-ignore\n    const item = entity[key];\n    array.push(item);\n  });\n  return array;\n};\n\nexport default () => {\n  const loading = listRegion.useLoading();\n  const list = listRegion.useValue();\n  const formattedList = deNormalize(list);\n  return (\n    <Card>\n      <a\n        href={'https://en.wikipedia.org/wiki/Representational_state_transfer'}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        What is RESTful?\n      </a>\n      <List\n        loading={loading}\n        dataSource={formattedList}\n        header={<Button onClick={handleGet}>GET</Button>}\n        footer={<Button onClick={handlePost}>POST</Button>}\n        renderItem={\n          (item) => {\n            const nextItem = { id: item.id, value: item.value + 1 };\n            const handlePut = () => handlePutBy(nextItem);\n            const handlePatch = () => handlePatchBy(nextItem);\n            const handleDelete = () => handleDeleteBy(item.id);\n            return (\n              <List.Item>\n                <span style={{ flex: 1 }}>{item.value}</span>\n                <Button onClick={handlePut}>PUT</Button>\n                <Button onClick={handlePatch}>PATCH</Button>\n                <Button onClick={handleDelete}>DELETE</Button>\n              </List.Item>\n            );\n          }\n        }\n      />\n    </Card>\n  );\n};\n","const factory = <O>(func: () => O) => (): Promise<O> => new Promise((resolve) => {\n  setTimeout(() => { resolve(func()); }, 500);\n});\n\nlet countA = 0;\nexport const fetchA = factory(() => {\n  countA += 1;\n  return `A${countA}`;\n});\n\nlet countB = 0;\nexport const fetchB = factory(() => {\n  countB += 1;\n  return `B${countB}`;\n});\n","import React, {useCallback, useState} from 'react';\nimport { createMappedRegion } from 'region-core';\nimport { Space } from 'antd';\nimport { Button, Card, Divider } from '../components';\nimport { fetchA, fetchB } from './mock';\n\ntype Key = 'A' | 'B'\n\nconst region = createMappedRegion<Key, unknown>();\nconst loadA = region.loadBy('A', fetchA);\nconst loadB = region.loadBy('B', fetchB);\n\nexport default () => {\n  const [current, setCurrent] = useState<'A' | 'B'>('A');\n  const value = region.useValue(current);\n  const handleClickA = useCallback(\n    () => {\n      setCurrent('A');\n      loadA()\n    },\n    []\n  )\n  const handleClickB = useCallback(\n    () => {\n      setCurrent('B');\n      loadB();\n    },\n    []\n  )\n  return (\n    <Card>\n      <p>\n        {'stale-while-revalidate is a cache invalidation strategy popularized by '}\n        <a\n          href={'https://tools.ietf.org/html/rfc5861'}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          HTTP RFC 5861\n        </a>\n      </p>\n      <Space>\n        <Button onClick={handleClickA}>loadA</Button>\n        <Button onClick={handleClickB}>loadB</Button>\n      </Space>\n      <Divider />\n      {value}\n    </Card>\n  );\n};\n","import React, { Fragment, useMemo } from 'react';\nimport { createRegion } from 'region-core';\nimport { Radio, Card, Lines } from '../components';\n\ninterface Animal {\n  type: string;\n  id: string;\n  value: string;\n}\n\nconst generate = (type: string, id: number) => ({\n  id: String(id),\n  type,\n  value: `${type}-${id}`,\n});\n\nconst animalRegion = createRegion<Animal[]>(['cat', 'cat', 'dog', 'cat', 'dog'].map((type, index) => generate(type, index)));\nconst typeRegion = createRegion<'cat' | 'dog'>();\n\nconst getFilteredArray = (array: Animal[], type?: string) => {\n  if (type && type !== 'all') {\n    return array.filter(item => item.type === type);\n  }\n  return array;\n};\n\nconst handleRadio = (e: any) => typeRegion.set(e.target.value);\n\nconst Panel = () => {\n  const array = animalRegion.useValue();\n  const type = typeRegion.useValue();\n  const memoizedArray = useMemo(\n    () => getFilteredArray(array, type),\n    [array, type],\n  );\n  return (\n    <Fragment>\n      <Card>\n        <Radio.Group value={type} onChange={handleRadio}>\n          <Radio.Button value=\"all\">All</Radio.Button>\n          <Radio.Button value=\"cat\">Cat</Radio.Button>\n          <Radio.Button value=\"dog\">Dog</Radio.Button>\n        </Radio.Group>\n      </Card>\n      <Card>\n        <Lines lines={memoizedArray.map(i => i.value)} />\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default Panel;\n","import React, { Fragment } from 'react';\nimport { createCombinedRegion } from 'region-core';\nimport { Input, Switch, Radio, Checkbox, Card, Divider } from '../components';\n\ninterface Shape {\n  a: boolean;\n  b: string;\n  c: string;\n  d: string[];\n}\nconst combinedRegion = createCombinedRegion<Shape>();\n\nconst handleChange = (value: boolean) => combinedRegion.set('a', value);\nconst handleInput = (e: any) => combinedRegion.set('b', e.target.value);\nconst handleRadio = (e: any) => combinedRegion.set('c', e.target.value);\nconst handleCheckBox = (value: any[]) => combinedRegion.set('d', value);\n\nconst FormCard = () => {\n  // @ts-ignore\n  const { a, b, c, d } = combinedRegion.useProps(['a', 'b', 'c', 'd']);\n  return (\n    <Card>\n      <Switch checked={a} onChange={handleChange} />\n      <Divider />\n      <Input value={b} onChange={handleInput} />\n      <Divider />\n      <Radio.Group value={c} onChange={handleRadio} options={['Hangzhou', 'Shanghai', 'Beijing', 'Chengdu']} />\n      <Divider />\n      <Checkbox.Group options={['Apple', 'Pear', 'Orange']} value={d} onChange={handleCheckBox} />\n    </Card>\n  );\n};\n\nconst Result = () => {\n  // @ts-ignore\n  const { a, b, c, d } = combinedRegion.useProps(['a', 'b', 'c', 'd']);\n  return (\n    <Card>\n      {JSON.stringify({\n        a, b, c, d,\n      })}\n    </Card>\n  );\n};\n\nconst Panel = () => <Fragment><FormCard /><Result /></Fragment>;\n\nexport default Panel;\n","export const fetchValidate = (value: string): Promise<string> => new Promise((resolve, reject) => {\n  setTimeout(\n    () => {\n      if (String(Number(value)) === value) {\n        resolve(value);\n      } else {\n        reject(new Error('message from api: type some number'));\n      }\n    },\n    1000,\n  );\n});\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Form, Input, Card } from '../components';\nimport { fetchValidate } from './api';\n\nconst asyncValidateRegion = createRegion<string>('');\n\nconst loadValidate = (value: string) => {\n  asyncValidateRegion.set(value);\n  asyncValidateRegion.loadBy(fetchValidate)(value);\n};\n\nconst handleChange = (e: any) => loadValidate(e.target.value);\n\nconst getValidateStatus = ({ loading, error, value }: any) => {\n  if (value === '') {\n    return undefined;\n  }\n  if (loading) {\n    return 'validating';\n  }\n  if (error) {\n    return 'error';\n  }\n  return 'success';\n};\n\nconst AsyncValidate = () => {\n  const { loading, error, value } = asyncValidateRegion.useProps();\n  const validateStatus = getValidateStatus({ loading, error, value });\n  const errorMessage = error && error.message;\n  // TODO fix error occurs\n  return (\n    <Card>\n      <Form.Item\n        hasFeedback\n        validateStatus={validateStatus}\n        help={validateStatus === 'validating' ? 'validating...' : errorMessage}\n      >\n        <Input\n          placeholder=\"type some number\"\n          value={value}\n          onChange={handleChange}\n        />\n      </Form.Item>\n    </Card>\n  );\n};\n\nexport default AsyncValidate;\n","import React from 'react';\nimport { createLocalStorageRegion } from 'region-core';\nimport { Input, Card } from '../components';\n\nconst localStorageRegion = createLocalStorageRegion('localStorage-key', 'some value stored in localStorage');\n\nconst handleChange = (e: any) => localStorageRegion.set(e.target.value);\n\nconst LocalStorageRegion = () => {\n  const value = localStorageRegion.useValue();\n  return (\n    <Card>\n      <Input value={value} onChange={handleChange} />\n    </Card>\n  );\n};\n\nexport default LocalStorageRegion;\n","const toggleList = [false, false, false, true, true, false, true, true];\nlet index = -1;\n\nexport const fetchValue1 = (): Promise<string> => new Promise((resolve, reject) => {\n  setTimeout(() => {\n    index += 1;\n    if (toggleList[index]) {\n      resolve('resolved 1');\n    } else {\n      reject(new Error('rejected 1'));\n    }\n  }, 1000);\n});\n\nexport const fetchValue2 = (): Promise<string> => new Promise((resolve, reject) => {\n  setTimeout(() => {\n    index += 1;\n    if (toggleList[index]) {\n      resolve('resolved 2');\n    } else {\n      reject(new Error('rejected 2'));\n    }\n  }, 1000);\n});\n","import React from 'react';\nimport { createCombinedRegion } from 'region-core';\nimport { LoadingOutlined, CloseCircleOutlined, CheckCircleOutlined } from '@ant-design/icons';\nimport { Button, Divider, Card } from '../components';\nimport { fetchValue1, fetchValue2 } from './api';\n\ninterface Shape {\n  value1: string;\n  value2: string;\n}\nconst errorRegion = createCombinedRegion<Shape>();\n\nconst loadValueWithError = () => {\n  errorRegion.load('value1', fetchValue1);\n  errorRegion.load('value2', fetchValue2);\n};\n\nloadValueWithError();\n\nconst getIcon = ({ loading, error }: {loading: boolean, error: Error}) => {\n  if (loading) {\n    return <LoadingOutlined />;\n  }\n  if (error) {\n    return <CloseCircleOutlined />;\n  }\n  return <CheckCircleOutlined />;\n};\n\nconst Display = () => {\n  // loading and error is combined\n  // @ts-ignore\n  const { loading, error, value1, value2 } = errorRegion.useProps(['value1', 'value2']);\n  return (\n    <Card>\n      {'Status: '}{getIcon({ loading, error })}\n      <Divider />\n      {'Value will remain last resolved value'}\n      <pre>{`value1: ${value1}\\nvalue2: ${value2}\\n`}</pre>\n      {'Error will be combined'}\n      <pre>{`error message: ${error && error.message}\\n`}</pre>\n      <Button loading={loading} onClick={loadValueWithError}>Try Again</Button>\n    </Card>\n  );\n};\n\nexport default Display;\n","import GetStarted from '../GetStarted';\nimport UseValue from '../UseValue';\nimport UseLoading from '../UseLoading';\nimport UseError from '../UseError';\nimport UseProps from '../UseProps';\nimport SharedValue from '../SharedValue';\nimport ClassComponent from '../ClassComponent';\nimport AdvancedLoading from '../AdvancedLoading';\nimport RESTful from '../RESTful';\nimport SWR from '../SWR';\nimport SelectValue from '../SelectValue';\nimport Form from '../Form';\nimport AsyncValidate from '../AsyncValidate';\nimport LocalStorageRegion from '../LocalStorageRegion';\nimport CombinedError from '../CombinedError';\n\nexport default [{\n  key: 'GetStarted',\n  label: 'Get Started',\n  groupName: 'GetStarted',\n  Component: GetStarted,\n}, {\n  key: 'UseValue',\n  label: 'useValue',\n  groupName: 'Basic',\n  Component: UseValue,\n}, {\n  key: 'UseLoading',\n  label: 'useLoading',\n  groupName: 'Basic',\n  Component: UseLoading,\n}, {\n  key: 'UseError',\n  label: 'useError',\n  groupName: 'Basic',\n  Component: UseError,\n}, {\n  key: 'UseProps',\n  label: 'useProps',\n  groupName: 'Basic',\n  Component: UseProps,\n}, {\n  key: 'LocalStorageRegion',\n  label: 'localStorage',\n  groupName: 'Basic',\n  Component: LocalStorageRegion,\n}, {\n  key: 'CombinedError',\n  label: 'Combined Error',\n  groupName: 'Basic',\n  Component: CombinedError,\n}, {\n  key: 'SharedValue',\n  label: 'Shared Value',\n  groupName: 'Advanced',\n  Component: SharedValue,\n}, {\n  key: 'AdvancedLoading',\n  label: 'Advanced Loading',\n  groupName: 'Advanced',\n  Component: AdvancedLoading,\n}, {\n  key: 'ClassComponent',\n  label: 'Class Component',\n  groupName: 'Advanced',\n  Component: ClassComponent,\n}, {\n  key: 'SelectValue',\n  label: 'Select Value',\n  groupName: 'Advanced',\n  Component: SelectValue,\n}, {\n  key: 'RESTful',\n  label: 'RESTful',\n  groupName: 'Advanced',\n  Component: RESTful,\n}, {\n  key: 'SWR',\n  label: 'SWR',\n  groupName: 'Advanced',\n  Component: SWR,\n}, {\n  key: 'AsyncValidate',\n  label: 'Async Validate',\n  groupName: 'Advanced',\n  Component: AsyncValidate,\n}, {\n  key: 'Form',\n  label: 'Form',\n  groupName: 'Advanced',\n  Component: Form,\n}];\n","import { createRegion } from 'region-core';\n\nexport const codeRegion = createRegion<string>('');\n\nexport const loadCode = (selectedKey: any) => {\n  const href = `https://raw.githubusercontent.com/regionjs/region-core/master/example/src/${selectedKey}/index.tsx`;\n  const request = new Request(href);\n  const fetcher = () => fetch(request).then(res => res.text());\n  codeRegion.load(fetcher);\n};\n","import React, { useState, useEffect } from 'react';\nimport MonacoEditor from 'react-monaco-editor';\nimport 'monaco-editor/esm/vs/basic-languages/javascript/javascript.contribution';\nimport { codeRegion, loadCode } from './codeRegion';\n\nconst getWindowSize = () => {\n  if (typeof window === 'undefined') {\n    throw new Error('window undefined');\n  }\n  return {\n    innerWidth: window.innerWidth,\n    innerHeight: window.innerHeight,\n    outerWidth: window.outerWidth,\n    outerHeight: window.outerHeight,\n  };\n};\n\nconst useWindowSize = () => {\n  // 窗口的尺寸事实上和页面内容是无关的，所以没必要等组件布局后再读，初始化的时候直接拿就好\n  const [size, setSize] = useState(getWindowSize);\n  useEffect(\n    () => {\n      const updateWindowSize = () => setSize(getWindowSize());\n      window.addEventListener('resize', updateWindowSize);\n      return () => window.removeEventListener('resize', updateWindowSize);\n    },\n    [],\n  );\n  return size;\n};\n\nconst Editor = ({ selectedKey }: any) => {\n  const { innerWidth } = useWindowSize();\n  const loading = codeRegion.useLoading();\n  const code = codeRegion.useValue();\n  useEffect(\n    () => {\n      loadCode(selectedKey);\n    },\n    [selectedKey],\n  );\n\n  if (loading) {\n    return null;\n  }\n\n  return (\n    <MonacoEditor\n      width={innerWidth - 260}\n      height={500}\n      language=\"javascript\"\n      theme=\"vs-dark\"\n      value={code}\n    />\n  );\n};\nexport default Editor;\n","import React from 'react';\nimport { GithubOutlined } from '@ant-design/icons';\nimport Editor from './Editor';\nimport styles from './External.module.css';\nimport { codeRegion } from './codeRegion';\n\nconst External = ({ selectedKey }: any) => {\n  const codeLoading = codeRegion.useLoading();\n  let gotoDefinitionClass = styles.code;\n  if (!codeLoading) {\n    gotoDefinitionClass = `${styles.code} ${styles.dark}`;\n  }\n  return (\n    <div className={styles.container}>\n      <div className={gotoDefinitionClass}>\n        <a\n          href={`https://github.com/regionjs/region-core/blob/master/example/src/${selectedKey}/index.tsx`}\n          rel=\"noreferrer noopener\"\n          target=\"_blank\"\n        >\n          <GithubOutlined />\n        </a>\n      </div>\n      <Editor selectedKey={selectedKey} />\n    </div>\n  );\n};\n\nexport default External;\n","import React, { FC } from 'react';\nimport { createRegion } from 'region-core';\nimport { get, groupBy } from 'lodash';\nimport { Menu, Layout } from '../components';\nimport history from './history';\nimport routes from './routes';\nimport External from './External';\n\nconst initSelectedKey = () => {\n  const { hash } = history.location;\n  const initSelectKey = hash !== '' ? hash.slice(1) : null;\n  const defaultSelectKey = get(routes, ['0', 'key']);\n  if (!initSelectKey || routes.find(({ key }) => key === initSelectKey) === undefined) {\n    return defaultSelectKey;\n  }\n  return initSelectKey;\n};\n\nconst selectedKeyRegion = createRegion(initSelectedKey());\n\nconst defaultSelectKey = get(routes, ['0', 'key']);\n\nconst onClick = ({ key }: any) => {\n  history.replace(`#${key}`);\n  selectedKeyRegion.set(key);\n};\n\nconst MenuItem = ({ key, label }: any) => <Menu.Item key={key}>{label}</Menu.Item>;\n\nconst getMenuElements = () => {\n  const routeGroups = groupBy(routes, 'groupName');\n\n  return Object.entries(routeGroups).map(([groupName, routeList]) => {\n    const routeElements = routeList.map(MenuItem);\n    if (routeList.length === 1) {\n      return routeElements;\n    }\n    return (\n      <Menu.SubMenu key={groupName} title={groupName} >\n        {routeElements}\n      </Menu.SubMenu>\n    );\n  });\n  // routes.map(MenuItem);\n};\n\nconst menuElements = getMenuElements();\n\nconst AppLayout: FC = () => {\n  const selectedKey = selectedKeyRegion.useValue();\n  const route = routes.find(({ key }) => key === selectedKey);\n  if (!route) {\n    selectedKeyRegion.set(defaultSelectKey);\n    return null;\n  }\n  const { Component, groupName } = route;\n  return (\n    <Layout style={{ height: '100vh' }}>\n      <Layout.Sider width={200} theme=\"light\" style={{ overflowY: 'auto' }}>\n        <Menu\n          mode=\"inline\"\n          defaultOpenKeys={[groupName]}\n          selectedKeys={[selectedKey]}\n          onClick={onClick}\n          style={{ minHeight: '100%', borderRight: '1px solid #e8e8e8' }}\n        >\n          {menuElements}\n        </Menu>\n      </Layout.Sider>\n      <Layout.Content>\n        <Component />\n        {selectedKey !== 'GetStarted' && <External selectedKey={selectedKey} />}\n      </Layout.Content>\n    </Layout>\n  );\n};\n\nexport default AppLayout;\n","import React from 'react';\nimport AppLayout from './AppLayout';\n\nexport const app = <AppLayout />;\n","/* global document */\nimport { render } from 'react-dom';\nimport { app } from './App';\nimport 'antd/dist/antd.css';\nimport './index.css';\n\nrender(app, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"External_container__3t52A\",\"code\":\"External_code__CR0le\",\"dark\":\"External_dark__2BAR1\"};"],"sourceRoot":""}